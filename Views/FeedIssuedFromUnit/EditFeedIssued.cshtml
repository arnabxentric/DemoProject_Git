@model XenERP.Models.ModelView.FeedIssuedFromUnitMasterModelView

@using XenERP.Models

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<script src="../../js/plugins/datetimepicker/bootstrap-datepicker.js" type="text/javascript"></script>

<style>
.table-responsive {
    min-height: 0.01%;
    overflow-x: auto;
}
</style>
<script src="~/Scripts/JqueryValidation.js" type="text/javascript"></script>


<script language="javascript" type="text/javascript">

    var rowadd = 0;

    $(document).on('click', '.add-component-deletebotton', function () {

        var id = $(this).closest('td').parent()[0].sectionRowIndex;
        document.getElementById("dataTable").deleteRow(id);
    });


    function addRow(tableID) {

        rowadd++;
        var table = document.getElementById(tableID);
        var rowCount = table.rows.length;
        var row = table.insertRow(rowCount);


        //------------Code By Ayan--------------------

        var elementH = document.createElement("input");
        elementH.type = "hidden";
        elementH.name = "IdToHoldInEdit" + rowadd;
        elementH.id = "IdToHoldInEdit" + rowadd;
        elementH.value = rowadd;
        elementH.className = "IdToHoldInEdit";



        var cell0 = row.insertCell(0);
        var element0 = document.createElement("select");
        element0.className = "CategoryId";
        element0.id = "CategoryId" + rowadd;
        element0.name = "CategoryId" + rowadd;
        var option0 = document.createElement("option");
        option0.innerHTML = "Select";
        option0.value = "";
        element0.add(option0, null);
        cell0.appendChild(element0);
        cell0.appendChild(elementH);


        $.get('/FeedIssued/GetCategoryType', null, function (data) {

            $.each(data, function () {
                $("#CategoryId" + rowadd).append($("<option />").val(this.Id).text(this.Name));
            });

        });



     
        //--------------------------

        var cell1 = row.insertCell(1);
        var element1 = document.createElement("select");
        element1.className = "ProductId";
        element1.id = "ProductId" + rowadd;
        element1.name = "ProductId" + rowadd;
        var option1 = document.createElement("option");
        option1.innerHTML = "Select";
        option1.value = "";
        element1.add(option1, null);
        cell1.appendChild(element1);

        $("#dataTable").on('change', '.CategoryName', function () {
            var v = $("#Category" + rowadd).val();
            var p = v.toString();

            $.get('/FeedIssued/GetFeedTypeWithCatId', { CatId: p }, function (data) {
                $("#ProductId" + rowadd).empty();
                $("#ProductId" + rowadd).append($("<option />").val(-1).text("--Select--"));
                $.each(data, function () {
                    $("#ProductId" + rowadd).append($("<option />").val(this.Id).text(this.Name));
                });

            });
        });

        var cell2 = row.insertCell(2);
        var element2 = document.createElement("input");
        element2.type = "text";
        element2.name = "UnitToDisplay" + rowadd;
        element2.className = "UnitToDisplay";
        element2.id = "UnitToDisplay" + rowadd;
        element2.readOnly = true;


        var elementH2 = document.createElement("input");
        elementH2.type = "hidden";
        elementH2.name = "UOMId" + rowadd;
        elementH2.className = "UOMId"
        elementH2.id = "UOMId" + rowadd;
        elementH2.readOnly = true;

        cell2.appendChild(elementH2);
        cell2.appendChild(element2);

        var cell3 = row.insertCell(3);
        var element3 = document.createElement("input");
        element3.type = "text";
        element3.name = "PrimaryUnit" + rowadd;
        element3.className = "PrimaryUnit";
        element3.id = "PrimaryUnit" + rowadd;
        element3.readOnly = true;
        cell3.appendChild(element3);

        var cell4 = row.insertCell(4);
        var element4 = document.createElement("select");
        element4.className = "ReceivedDateString";
        element4.id = "ReceivedDateString" + rowadd;
        element4.name = "ReceivedDateString" + rowadd;
        var option4 = document.createElement("option");
        option4.innerHTML = "select";
        option4.value = "";
        element4.add(option4, null);
        cell4.appendChild(element4);



        var cell5 = row.insertCell(5);
        var element5 = document.createElement("input");
        element5.type = "text";
        element5.name = "FeedQuantity" + rowadd;
        element5.className = "FeedQuantity";
        element5.id = "FeedQuantity" + rowadd;

       
        var element5H = document.createElement("input");
        element5H.type = "hidden";
        element5H.name = "FeedHiddenQuantity" + rowadd;
        element5H.className = "FeedHiddenQuantity";
        element5H.id = "FeedHiddenQuantity" + rowadd;
        
        cell5.appendChild(element5);
        cell5.appendChild(element5H);


        var cell6 = row.insertCell(6);
        var element6 = document.createElement("input");
        element6.type = "hidden";
        element6.name = "PriceRate" + rowadd;
        element6.className = "PriceRate";
        element6.id = "PriceRate" + rowadd;


        var element6H = document.createElement("input");
        element6H.type = "hidden";
        element6H.name = "UnitPrice" + rowadd;
        element6H.className = "UnitPrice";
        element6H.id = "UnitPrice" + rowadd;

        cell6.appendChild(element6H);
        cell6.appendChild(element6);        


        var cell7 = row.insertCell(7);
        var element7 = document.createElement("input");
        element7.type = "text";
        element7.name = "AvailableStock" + rowadd;
        element7.className = "AvailableStock";
        element7.id = "AvailableStock" + rowadd;
        element7.readOnly = true;

        var elementAH = document.createElement("input");
        elementAH.type = "hidden";
        elementAH.name = "AvailableStockHidden" + rowadd;
        elementAH.id = "AvailableStockHidden" + rowadd;
        elementAH.className = "AvailableStockHidden";

        var elementIsH = document.createElement("input");
        elementIsH.type = "hidden";
        elementIsH.name = "IssuedHidden" + rowadd;
        elementIsH.id = "IssuedHidden" + rowadd;
        elementIsH.className = "IssuedHidden";


        var elementRH = document.createElement("input");
        elementRH.type = "hidden";
        elementRH.name = "FeedReceivedFromHOMasterId" + rowadd;
        elementRH.id = "FeedReceivedFromHOMasterId" + rowadd;
        elementRH.className = "FeedReceivedFromHOMasterId";

        var elementRDH = document.createElement("input");
        elementRDH.type = "hidden";
        elementRDH.name = "FeedReceivedFromHODetailsId" + rowadd;
        elementRDH.id = "FeedReceivedFromHODetailsId" + rowadd;
        elementRDH.className = "FeedReceivedFromHODetailsId";



        var elementH = document.createElement("input");
        elementH.type = "hidden";
        elementH.name = "FeedReceivedMasterId" + rowadd;
        elementH.id = "FeedReceivedMasterId" + rowadd;
        elementH.className = "FeedReceivedMasterId";
        elementH.value = null;
           


        cell7.appendChild(element7);
        cell7.appendChild(elementAH);
        cell7.appendChild(elementIsH);
        cell7.appendChild(elementRH);
        cell7.appendChild(elementRDH);
        cell7.appendChild(elementH);



        var cell8 = row.insertCell(8);
        var element8 = document.createElement("input");
        element8.type = "text";
        element8.name = "FeedDesc" + rowadd;
        element8.id = "FeedDesc" + rowadd;
        element8.className = "FeedDesc";
        cell8.appendChild(element8);



        var cell9 = row.insertCell(9);
        var element9 = document.createElement("input");
        element9.type = "button";
        element9.id = "btndelete";
        element9.name = "button[]";
        element9.title = "Delete this row";
        element9.className = "add-component-deletebotton";
        cell9.appendChild(element9);

    };

</script>

<script language="javascript" type="text/javascript">

    $(document).ready(function () {

        $("#dataTable").on('change', '.CategoryId', function () {

            var ctd = $(this).closest('td');
            var ctr = ctd.closest('tr');
            var nmn = ctr.find('.IdToHoldInEdit');
            var ppp = nmn.val();
            var rowadd = parseInt(ppp);
            var v = $("#CategoryId" + rowadd).val();
            var p = v.toString();
            $.get('/FeedIssued/GetFeedTypeWithCatId', { CatId: p }, function (data) {
                $("#ProductId" + rowadd).empty();
                $("#ProductId" + rowadd).append($("<option />").val(-1).text("--Select--"));
                $.each(data, function () {
                    $("#ProductId" + rowadd).append($("<option />").val(this.Id).text(this.Name));
                });

            });
        });

        $("#dataTable").on('change', '.ProductId', function () {

            var ctd = $(this).closest('td');
            var ctr = ctd.closest('tr');
            var nmn = ctr.find('.IdToHoldInEdit');
            var ppp = nmn.val();
            var rowadd = parseInt(ppp);

            var v = $("#ProductId" + rowadd).val();
            var y = $("#ProductId" + rowadd + " :selected").text();
            var k = $("#CategoryId" + rowadd).val();
            var p = v.toString();

            $.get('/FeedIssuedFromUnit/GetUnitTypeWithProductId', { CatId: p }, function (data) {
                //  $("#UOM" + rowadd).empty();

                $("#FeedQuantity" + rowadd).val(0);
                $("#PrimaryUnit" + rowadd).val(0);
                $("#TotalQuantity" + rowadd).val(0);


                $.each(data, function () {
                    $("#UOMId" + rowadd).val(this.UnitId);
                    $("#UnitToDisplay" + rowadd).val(this.UnitName);
                    $("#PrimaryUnit" + rowadd).val(1);

                });
            });


            $.get('/FeedIssuedFromUnit/GetFeedDate', { CatId: k, FeedId: v }, function (data) {

                $("#ReceivedDateString" + rowadd).empty();
                $("#ReceivedDateString" + rowadd).append($("<option />").val(-1).text("--Select--"));
                $.each(data, function () {
                    $("#ReceivedDateString" + rowadd).append($("<option />").val(this.FeedReceivedId).text(this.FeedReceivedChallanNo));
                });

            });



            $.get('/FeedIssuedFromUnit/CheckMedUnitPrice', { CatId: k, FeedId: v }, function (data, status) {
                //alert(status);
                //alert(data);
                //alert(y);
                if (data == -500) {
                    return false;
                }
                else if (data == 0 || data == null) {
                    alert("Please Enter Unit Price for " + y);
                }
                else {
                    alert("Unit Price for " + y + " is " + data);
                }

            });


            $("#dataTable").on('change', '.ReceivedDateString', function () {

                var ctd = $(this).closest('td');
                var ctr = ctd.closest('tr');
                var m = $("#CategoryId" + rowadd).val();
                var v = $("#ProductId" + rowadd).val();
                // var oo = $("#UOM" + rowadd).val();
                var ooo = $("#ReceivedDateString" + rowadd).val();

                var p = v.toString();
                //    var po = oo.toString();
                var poo = ooo.toString();
                $.get('/FeedIssuedFromUnit/GetFeedStock', { CatId: m, FeedId: p, FeedReceivedId: poo }, function (data) {
                    var avl = (parseFloat(data.Quantity) - parseFloat(data.IssudQuantity)).toFixed(2);
                    // alert(data.IssudQuantity);
                    $("#AvailableStock" + rowadd).val(avl);
                    $("#AvailableStockHidden" + rowadd).val(avl);
                    $("#IssuedHidden" + rowadd).val(data.IssudQuantity);
                    $("#PriceRate" + rowadd).val(data.PriceRate);
                    $("#UnitPrice" + rowadd).val(data.UnitPrice);
                    $("#FeedReceivedFromHOMasterId" + rowadd).val(data.FeedReceivedId);
                });
            });




        });       





        $("#dataTable").on('keyup', '.FeedQuantity ', function () {
           
            var UM = $(this).val();
            var ctd = $(this).closest('td');
            var ctr = ctd.closest('tr');


            var hhh = parseInt(ctr.find(".PrimaryUnit").val()) || 0;
            var vgg = parseFloat(ctr.find(".FeedQuantity").val()).toFixed(2) || 0;
            var vkk = parseFloat(ctr.find(".AvailableStockHidden").val()) || 0;
            var vkl = parseFloat(ctr.find(".FeedHiddenQuantity").val()) || 0;

            ctr.find(".AvailableStock").val((vkk + vkl - vgg).toFixed(2));
            ctr.find(".TotalQuantity").val(parseFloat(hhh * vgg)).ToFixed(2);


            var astock = parseFloat(ctr.find('.AvailableStock').val());
            var feedquan = parseFloat(ctr.find('.FeedQuantity').val());
            ctr.find(".FeedHiddenQuantity").val(feedquan);

            var unit = ctr.find('.UnitToDisplay').val();

            if (feedquan > astock) {
                alert('Quantity Not Available.Send less than or equal to ' + astock + ' ' + unit);
                ctr.find('.FeedQuantity').val(0);
                ctr.find(".FeedHiddenQuantity").val(0);
                $("#btnsave").attr("disabled", true);
            }
            else {

                $("#btnsave").attr("disabled", false);
            }


        });



    });

</script>


<script language="javascript" type="text/javascript">

    $(document).ready(function () {
        $("#dp3").datepicker({ autoclose: true, todayHighlight: true });

        $("#dataTable").on('change', '.UOMName', function () {
            var UM = $(this).val();
            var ctd = $(this).closest('td');
            var ctr = ctd.closest('tr');
            $.getJSON('/FeedIssued/GetUnitFormula', { data: UM }, function (data) {
                ctr.find(".PrimaryUnit").val(data.Formula);
                var vgh = parseInt(ctr.find(".FeedQuantity").val()) || 0;
                var hhh = parseInt(data.Formula) || 0;


                ctr.find(".TotalQuantity").val(hhh * vgh);
                $(".FeedQuantity").on('keyup', function () {
                    var vgg = parseInt(ctr.find(".FeedQuantity").val()) || 0;

                    ctr.find(".TotalQuantity").val(hhh * vgg);


                })
            });
        });

    });

</script>




@using (Html.BeginForm("EditFeedIssued", "FeedIssuedFromUnit"))
{

    <aside class="right-side">

        <section class="content-header">
            <h1>Feed Issued<small>Edit</small> </h1>
            <ol class="breadcrumb">
                <li><a href="#"><i class="fa fa-dashboard"></i>Home</a></li>
                <li><a href="#">Forms</a></li>
                <li class="active"> Farm Edit</li>
            </ol>
        </section>

        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="pull-right"><input name="" type="submit" value="Submit" class="btn btn-primary"> </li>

            </ul>
        </div>

        <!-- Main content -->
        @*<section class="content">
            <div class="row">
                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header">
                        </div>
                        <div class="box-body">*@

        @if (ViewBag.Message != null)
        {
            <div class="alert alert-success alert-dismissable">
                <i class="fa fa-check"></i>
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                @ViewBag.Message
            </div>
        }

        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger alert-dismissable">
                <i class="fa fa-ban"></i>
                <button class="close" aria-hidden="true" data-dismiss="alert" type="button"></button>
                <b>Error!</b>
                @ViewBag.Error
            </div>
        }



       

       
         @Html.HiddenFor(model => model.Id)
         @Html.HiddenFor(model => model.UserId)
         @Html.HiddenFor(model => model.CompanyId)
         @Html.HiddenFor(model => model.BranchId)
         @Html.HiddenFor(model => model.FinancialYearId)
       
        <div class="col-md-12">

       <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header">  </div>
                <div class="box-body">
                    
                   
                        <div class="form-group">
                            <label class="black_txt_010"> Unit Code:<span style="color:Red;">*</span> </label>
                            @Html.TextBoxFor(model => model.UnitCode, new { @class = "form-control", @placeholder = "Enter Farm Name", @maxlength = "100", @readonly = "readonly", @Name = "UnitCode" })
                            @Html.HiddenFor(model => model.UnitId, new { @Name = "UnitId" })
                        </div>
                       
                        <div class="form-group">
                            <label class="black_txt_010"> Farmer Name:<span style="color:Red;">*</span> </label>
                            @Html.TextBoxFor(model => model.FarmerName, new { @class = "form-control", @placeholder = "Enter Farm Name", @maxlength = "100", @readonly = "readonly", @Name = "FarmCode" })
                            @Html.HiddenFor(model => model.FarmId, new { @Name = "FarmId" })
                        </div>

                         @*<div class="form-group">
                            <label class="black_txt_010"> Flock Code:<span style="color:Red;">*</span> </label>
                            @Html.TextBoxFor(model => model.FlockCode, new { @class = "form-control", @placeholder = "Enter Farm Name", @maxlength = "100", @readonly = "readonly", @Name = "FlockCode" })
                            @Html.HiddenFor(model => model.FlockId, new { @Name = "FlockId" })
                        </div>*@

                    <div class="form-group">
                        <label class="black_txt_010"> Flock Code :<span style="color:Red;">*</span> </label>
                        @Html.DropDownListFor(model => Model.FlockId, new SelectList(ViewBag.FlockCode, "Id", "Name"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => Model.FlockId)

                    </div>   



                        <div class="form-group">
                        <label class="black_txt_010"> Date Of Despatch:<span style="color:Red;">*</span> </label>
                         <div class="input-group date" id="dp3" data-date-format="@Session["DateFormatLower"]">@Html.TextBoxFor(model => model.DateOfIssueString, new { @class = "form-control", @Name = "DateOfIssueString", @readonly = "" })  <span class="input-group-addon" style=" width:auto !important"><i class="glyphicon glyphicon-calendar"></i></span> </div>                       
                        @Html.ValidationMessageFor(model => model.DateOfIssueString)
                        @Html.HiddenFor(model => model.Status)
                        </div>

                     

                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header">  </div>
                <div class="box-body">

                  <div class="form-group">
                        <label class="black_txt_010"> Deliveryman Code :<span style="color:Red;"></span> </label>
                        @Html.TextBoxFor(model => model.DeliveryManCode, new { @class = "form-control", @placeholder = "Enter Farmer Address", @maxlength = "100", @Name = "DeliveryManCode" })
                        @Html.ValidationMessageFor(model => model.DeliveryManCode)
                    </div>
                                   
                    <div class="form-group">
                        <label class="black_txt_010"> Deliveryman Name:<span style="color:Red;"></span> </label>
                        @Html.TextBoxFor(model => model.DeliveryManName, new { @class = "form-control", @placeholder = "Enter Farmer Address", @maxlength = "100", @Name = "DeliveryManName" })
                        @Html.HiddenFor(model => model.DeliveryManId)
                        @Html.ValidationMessageFor(model => model.DeliveryManName)
                    </div>

                  

                     <div class="form-group">
                        <label class="black_txt_010"> Challan No:<span style="color:Red;"></span> </label>
                        @Html.TextBoxFor(model => model.ChallanNo, new { @class = "form-control", @placeholder = "Enter Farmer Address", @maxlength = "100", @Name = "ChallanNo" })
                        @Html.ValidationMessageFor(model => model.ChallanNo)
                    </div>
                   
                </div>
            </div>
        </div>

        </div>
      
          <div class="col-md-12">

        <div class="form-group">
                          <h3>Feed Details</h3>
                          </div>
                         <div class="form-group">
                         <div class="table-responsive">
                          <table class="my-table-style table" id="dataTable">
                          <tr class="my-table-header">
                     <td class="my-table-header" style="text-align:center;">
                          <label class="black_txt_010">Feed/Medicine Category</label>
                          </td>

                          <td class="my-table-header" style="text-align:center;">
                          <label class="black_txt_010">Feed/Medicine Name</label>
                          </td>                   
                            <td  style="text-align:center;">
                          <label class="black_txt_010">Unit Type</label>
                          </td>

                            <td style="text-align:center;">
                          <label class="black_txt_010">Unit Of</label>
                          </td>
                          <td style="text-align:center;">
                          <label class="black_txt_010">Date Of Receipt</label>
                          </td>
                         
                         <td style="text-align:center;">
                          <label class="black_txt_010">Issued Quantity</label>
                          </td>

                           <td style="text-align:center;">
                          <label class="black_txt_010"></label>
                          </td>

                           <td style="text-align:center;">
                          <label class="black_txt_010">Available Stock</label>
                          </td>

                          
                        @* <td  style="text-align:center;">
                          <label class="black_txt_010">Feed Quantity</label>
                          </td>
                          


                          <td style="text-align:center;">
                          <label class="black_txt_010">Total Quantity</label>
                          </td>*@

                            <td class="my-table-header" style="text-align:center;">
                          <label class="black_txt_010">Description</label>
                          </td>


                          <td style="text-align: center;">
                          <label class="black_txt_010">Action</label>
                          </td>


                           </tr>

                           @{ int H = 0;                              
                               
                            }

                           @for (int i = 0; i < Model.feedissuedfromunitMasterDetails.Count(); i++)
                           {

                               H = H + i;
                         
                        
                            <tr >

                             <td  style="text-align:center;">
                               @Html.Hidden("IdToHoldInEdit", i, new { @Name = "IdToHoldInEdit" + i, @class = "IdToHoldInEdit" })
                               @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].CategoryName, new { @class = "form-control CategoryName", @maxlength = "100", @id = "CategoryName" + i, @Name = "CategoryName" + i, @readonly = "readonly" })
                               @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].CategoryId, new { @class = "form-control CategoryId",  @maxlength = "100", @id = "CategoryId" + i, @Name = "CategoryId" + i, @readonly = "readonly" })
                        
                          </td>

                          @{
                               InventoryEntities db = new InventoryEntities();
                               var kl = Convert.ToInt32(Model.feedissuedfromunitMasterDetails[i].CategoryId);
                               var v = db.Products.Where(g => g.CategoryId == kl).ToList();                             
            
                           }

                           <td  style="text-align:center;">

                           @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].ProductName, new { @class = "form-control ProductName", @maxlength = "100", @id = "ProductName" + i, @Name = "ProductName" + i, @readonly = "readonly" })   
                           @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].ProductId, new { @class = "form-control ProductId", @maxlength = "100", @id = "ProductId" + i, @Name = "ProductId" + i, @readonly = "readonly" })   
                                                
                          </td>

                            @{                             

                               var klu = Convert.ToInt32(Model.feedissuedfromunitMasterDetails[i].ProductId);
                               var ppp = db.Products.Where(pk => pk.Id == klu).FirstOrDefault();

                               List<long> jjj = new List<long>();
                               jjj.Add(Convert.ToInt32(ppp.UnitId));
                             //  jjj.Add(Convert.ToInt32(ppp.UnitIdSecondary));
                               var klj = db.UOMs.Where(ml => jjj.Contains(ml.Id)).ToList();                               
            
                           }

                           <td  style="text-align:center;">
                            @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].UOMName, new { @class = "form-control UnitToDisplay", @readonly = "readonly", @placeholder = "Enter Unit Name", @maxlength = "100", @id = "UnitToDisplay" + i, @Name = "UnitToDisplay" + i })
                          @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].UOMId, new { @class = "form-control UOMId", @readonly = "readonly", @placeholder = "Enter Farm Unit Name", @maxlength = "100", @id = "UOMId" + i, @Name = "UOMId" + i })
                          </td>

                           <td style="text-align:center;">
                           @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].UnitFormula, new { @class = "form-control PrimaryUnit", @readonly = "readonly", @id = "PrimaryUnit" + i, @Name = "PrimaryUnit" + i })
                          </td>

                          <td style="text-align:center;">
                           @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].ReceivedDateString, new { @class = "form-control ReceivedDateString", @readonly = "readonly", @id = "ReceivedDateString" + i, @Name = "ReceivedDateString" + i })
                          </td>


                           <td  style="text-align:center;">
                           @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].Quantity, new { @class = "form-control FeedQuantity", @id = "FeedQuantity" + i, @Name = "FeedQuantity" + i })
                            @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].Quantity, new { @class = "form-control FeedHiddenQuantity", @id = "FeedHiddenQuantity" + i, @Name = "FeedHiddenQuantity" + i })
                             @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].FeedReceivedFromHOMasterId, new { @class = "form-control FeedReceivedFromHOMasterId", @id = "FeedReceivedFromHOMasterId" + i, @Name = "FeedReceivedFromHOMasterId" + i })
                               @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].FeedReceivedFromDetailsId, new { @class = "form-control FeedReceivedFromHODetailsId", @id = "FeedReceivedFromHODetailsId" + i, @Name = "FeedReceivedFromHODetailsId" + i })
                              @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].FeedReceivedId, new { @class = "form-control FeedReceivedMasterId", @id = "FeedReceivedMasterId" + i, @Name = "FeedReceivedMasterId" + i })
                               @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].FeedIssueDetailsId, new { @class = "form-control FeedIssueDetailsId", @id = "FeedIssueDetailsId" + i, @Name = "FeedIssueDetailsId" + i })
                             
                          </td>                   
                          
                            <td style="text-align:center;">
                           @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].PriceRate, new { @class = "form-control PriceRate", @readonly = "readonly", @id = "PriceRate" + i, @Name = "PriceRate" + i })
                           @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].UnitPrice, new { @class = "form-control UnitPrice", @readonly = "readonly", @id = "UnitPrice" + i, @Name = "UnitPrice" + i })
                          </td>                         

                           <td style="text-align:center;">                      


                           @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].AvailableStock, new { @class = "form-control AvailableStock", @readonly = "readonly", @id = "AvailableStock" + i, @Name = "AvailableStock" + i })
                            @Html.HiddenFor(model => Model.feedissuedfromunitMasterDetails[i].AvailableStock, new { @class = "form-control AvailableStockHidden", @readonly = "readonly", @id = "AvailableStockHidden" + i, @Name = "AvailableStockHidden" + i })
                          </td>

                          @*<td style="text-align:center;">
                          @{
                               var k = Model.feedissuedfromunitMasterDetails[i].UnitFormula * Model.feedissuedfromunitMasterDetails[i].Quantity;                             
                            }

                         @Html.TextBox("TotalQuantity", k, new { @class = "form-control TotalQuantity", @readonly = "readonly", @id = "TotalQuantity" + i, @Name = "TotalQuantity" + i })
                          </td>*@


                          
                           <td style="text-align:center;">
                          @Html.TextBoxFor(model => Model.feedissuedfromunitMasterDetails[i].Description, new { @class = "form-control FeedDesc", @id = "FeedDesc" + i, @Name = "FeedDesc" + i })
                          </td>



                          <td style="text-align: center;">
                         <input type="button" id="btndelete" name="button[]" title = "Delete this row" class="add-component-deletebotton"/>
                           </td>                             
                             </tr>
                           }
                        
                           </table>
                          

                              @Html.Hidden("IdToHold", H)
                           </div>
                            <input type="button" class="add-component-botton" id="btnAdd" onclick="addRow('dataTable')" />
                           </div>

                          

</div>

        }


    </aside>

}