@model XenERP.Models.SalesAnalysisModelView

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<link href="~/css/datetimepicker/datepicker.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/JqueryValidation.js"></script>
<script src="../../js/plugins/datetimepicker/bootstrap-datepicker.js" type="text/javascript"></script>
<script src="../../js/jquery-ui-1.10.3.js" type="text/javascript"></script>
@*<link href="~/Content/select2/select2.min.css" rel="stylesheet" />
<script src="~/Content/select2/select2.full.min.js"></script>*@


<style>
    .my-table-header {
        background: #55b4b4;
        color: #0e0505;
    }

    .HandCursor {
        cursor: pointer;
    }

    .display-non-div {
        display: none !important;
    }

    .add-component-deletebotton {
        background: url(../Images/icon-delete.png) no-repeat scroll 0 0 rgba(0, 0, 0, 0);
        border: medium none;
        height: 15px;
        width: 15px;
    }
</style>

<style>
    .example-modal .modal {
        position: relative;
        top: auto;
        bottom: auto;
        right: auto;
        left: auto;
        display: block;
        z-index: 1;
        color: red;
    }

    .modal {
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1040;
        display: none;
        overflow: auto;
        overflow-y: scroll;
        color: red;
    }

    .modal-content {
        background-color: #ffffff;
        width: 330px;
        margin: 130px auto 0 auto;
        text-align: center;
    }

    .example-modal .modal {
        background: transparent !important;
    }



    .tblr {
        overflow-y: auto;
        overflow-x: inherit;
    }

    .spWdth {
        width: 84px;
    }

    .seWdth {
        width: 275px;
    }
</style>



@*===========SELECT2 ASSAIGN==============*@

<script type="text/javascript">
    $(document).ready(function () {
        //$(".select2").select2();
        $("#dp3").datepicker({ autoclose: true, todayHighlight: true });
        $("#dp4").datepicker({ autoclose: true, todayHighlight: true });
    });
</script>

<script>

</script>

<script>
    $(document).ready(function () {
        $("form").on("submit", function (event) {
            var rows = $('#issueDetailsTab tr').length;

            if (rows == 1) {
                $("#myModal").modal('show');
                $('.msg1').html('Please issue the items to farm');
                return false;
            }

            $("#loading").fadeIn();
        });
    });
</script>


<script>
    $(document).ready(function () {
        //$("#SalesListTab").on('change', '.frm_id', function () {

        //    var comptd = $(this).closest('td');
        //    var comptr = comptd.closest('tr');
        //    //var id = comptr.find('.id').val();

        //    var rvwId = $(this).val();

        //    $("#loading").fadeIn();
        //    if (rvwId == '') {
        //        $("#FlockId").empty();
        //        $("#FlockId").append($('<option/>', {
        //            value: "",
        //            text: "----Select Flock Code ----"
        //        }));

        //    }
        //    else {
        //        $(comptr.find('.flk_id')).empty();
        //        $(comptr.find('.flk_id')).append($('<option/>', {
        //            value: "",
        //            text: "----Select Flock Code ----"
        //        }));
        //        $.post("/HariUnitIssue/GetFlockDetails", { farmerId: rvwId }, function (data) {
        //            var select = $(comptr.find('.flk_id'));

        //            select.empty();
        //            select.append($('<option/>', {
        //                value: "",
        //                text: "----Select Flock Code----"
        //            }));

        //            if (data == "") {
        //                $("#loading").fadeOut(500);
        //            }
        //            $.each(data, function (index, itemData) {

        //                select.append($('<option/>', {
        //                    value: itemData.Id,
        //                    text: itemData.Value
        //                }));
        //                $("#loading").fadeOut(500);
        //            });

        //        });

        //    }


        //});

        $("#upsal").on('click', function () {
            var id = $("#Id").val();
            alert(id);
            window.location.href = "/HariSalesAnalysis/UpdateActualSales?Id=" + id;
        });

        $("#bak").on('click', function () {
            window.location.href = "/HariSalesAnalysis/AnalysisList";
        });

        $("#TraderListTab").on('change', '.csh', function () {
            var comptd = $(this).closest('td');
            var comptr = comptd.closest('tr');

            // var total = comptr.find('.totalAmo').val() || 0;
            var bank = comptr.find('.bnk').val() || 0;
            var grndTotal = parseFloat(bank) + parseFloat(this.value);
            comptr.find('.totalAmo').val(grndTotal);

            var cashTotal = 0;
            $('.csh').each(function () {

                cashTotal += parseFloat(this.value) || 0;
            });
            $("#CashInHand").val(cashTotal);

            var TotalRec = 0;
            $('.totalAmo').each(function () {

                TotalRec += parseFloat(this.value) || 0;
            });
            $("#ActualSalesAmount").val(TotalRec);
        });
        $("#TraderListTab").on('change', '.bnk', function () {
            var comptd = $(this).closest('td');
            var comptr = comptd.closest('tr');

            //  var total = comptr.find('.totalAmo').val() || 0;
            var cash = comptr.find('.csh').val() || 0;
            var grndTotal = parseFloat(cash) + parseFloat(this.value);
            comptr.find('.totalAmo').val(grndTotal);

            var bankTotal = 0;
            $('.bnk').each(function () {

                bankTotal += parseFloat(this.value) || 0;
            });
            $("#BankTransfer").val(bankTotal);

            var TotalRec = 0;
            $('.totalAmo').each(function () {

                TotalRec += parseFloat(this.value) || 0;
            });
            $("#ActualSalesAmount").val(TotalRec);
        });


    });
</script>

<script>
    $(document).ready(function () {
        TrdrLst = [];
        if ('@ViewBag.Trader' != '') {

            var arrtC = '@Html.Raw(Json.Encode(ViewBag.Trader))';

            TrdrLst = JSON.parse(arrtC);

            TrdrLst = $.makeArray(TrdrLst);

        }

        Frmr = [];
        if ('@ViewBag.farmer' != '') {

            var arrtC = '@Html.Raw(Json.Encode(ViewBag.farmer))';

            Frmr = JSON.parse(arrtC);

            Frmr = $.makeArray(Frmr);

        }
    });
</script>

<script>
    $(document).ready(function () { captureImageClicks(); });

    function captureImageClicks() {
        $(document).on("click", "img[id^='img']", function (e) {

            var tableId = $(this).closest('table').attr('id');
            var tr = $(this).closest('tr');

            if (tableId == "SalesListTab") {
                this.id == "imgSalesAdd" ? addGridRow(tr) : deleteRow(tr);
            }
        });
        //  addTransferredAssesseeGridValidations($("#imgtransferredAssesseeAdd").closest("tr"));

    }                                                   //clone the exist & transfer assessee
    function addGridRow(tr) {

        var clone;
        tr.after(function () {
            clone = tr.clone();

            clone.find('input').val("").end();
            clone.find('select').empty().end();

            return clone;
        });

        changeNameID(clone, 1);
        var index = $("#SalesListTab").find("tr").length - 2;

        $("#UnitSalesAnalysisList_" + index + "__TraderId").append($("<option />").val(-1).text("--Select--"));
        $.each(TrdrLst, function (index1, value) {
            $("#UnitSalesAnalysisList_" + index + "__TraderId").append($("<option />").val(value.Value).text(value.Text));
        });

        $("#UnitSalesAnalysisList_" + index + "__FarmerId").append($("<option />").val(-1).text("--Select--"));
        $.each(Frmr, function (index1, value) {

            $("#UnitSalesAnalysisList_" + index + "__FarmerId").append($("<option />").val(value.Value).text(value.Text));
        });

        tr.find("img[id^='img']").hide();
        return clone;
    }
    function deleteRow(tr) {
        var table = tr.closest("table");
        var maxtr = $(table).find('tbody tr');
        if (checkMinRows(tr) == false) {
            alertBox("You cannot  have less than " + maxtr.length + "  Row for this table");
            return;
        }
        changeNameID(tr, -1);
        tr.prev().find("img[id^='img']").show();
        tr.remove();
    }
    function changeNameID(tr, num) {
        var index = $("#SalesListTab").find("tr").length - 2;
        //var uIndex = $('.label').val();

        tr.find(".ind").val(index);
        //var headerText = tr.closest('table').closest('tbody').find('.headLabel').text();
        //var id = headerText.match(/(\d)/)[0] - 1;
        //tr.find('label').text(function () { return $(this).text().replace(/(\d+)/, function (n) { return Number(n) + num }) });
        //tr.find('input,select').attr("id", function () { return this.id.replace(/issDet(\d+)/, function (n) { return "issDet" + id }) });
        //tr.find('input,select').attr("name", function () { return this.name.replace(/issDet\[(\d+)/, function (n) { return "issDet\[" + id }) });

        //var uIndex = tr.find('label').text() - 1;
        tr.find('input,select').attr("id", function () { return this.id.replace(/UnitSalesAnalysisList_(\d+)/, function (n) { return "UnitSalesAnalysisList_" + index }) });
        tr.find('input,select').attr("name", function () { return this.name.replace(/UnitSalesAnalysisList\[(\d+)/, function (n) { return "UnitSalesAnalysisList\[" + index }) });
    }

    function checkMinRows(tr) {
        var numRows = tr.closest("tbody")[0].rows.length;
        if (numRows == 1) return false;
        return true;
    }


</script>

<script>
    $(document).ready(function () { captureImageClicks1(); });

    function captureImageClicks1() {
        $(document).on("click", "img[id^='Pic']", function (e) {

            var tableId = $(this).closest('table').attr('id');
            var tr = $(this).closest('tr');

            if (tableId == "TraderListTab") {
                this.id == "PicTraderAdd" ? addGridRow1(tr) : deleteRow1(tr);
            }
        });
        //  addTransferredAssesseeGridValidations($("#imgtransferredAssesseeAdd").closest("tr"));

    }                                                   //clone the exist & transfer assessee
    function addGridRow1(tr) {

        var clone;
        tr.after(function () {
            clone = tr.clone();

            clone.find('input').val("").end();
            clone.find('select').empty().end();

            return clone;
        });

        changeNameID1(clone, 1);
        var index = $("#TraderListTab").find("tr").length - 2;

        $("#TradersalesAnalysisList_" + index + "__TraderId").append($("<option />").val(-1).text("--Select--"));
        $.each(TrdrLst, function (index1, value) {
            $("#TradersalesAnalysisList_" + index + "__TraderId").append($("<option />").val(value.Value).text(value.Text));
        });

        tr.find("img[id^='Pic']").hide();
        return clone;
    }
    function deleteRow1(tr) {
        var table = tr.closest("table");
        var maxtr = $(table).find('tbody tr');
        if (checkMinRows1(tr) == false) {
            alertBox("You cannot  have less than " + maxtr.length + "  Row for this table");
            return;
        }
        changeNameID1(tr, -1);
        tr.prev().find("img[id^='Pic']").show();
        tr.remove();
    }
    function changeNameID1(tr, num) {
        var index = $("#TraderListTab").find("tr").length - 2;
        //var uIndex = $('.label').val();

        tr.find(".ind").val(index);
        //var headerText = tr.closest('table').closest('tbody').find('.headLabel').text();
        //var id = headerText.match(/(\d)/)[0] - 1;
        //tr.find('label').text(function () { return $(this).text().replace(/(\d+)/, function (n) { return Number(n) + num }) });
        //tr.find('input,select').attr("id", function () { return this.id.replace(/issDet(\d+)/, function (n) { return "issDet" + id }) });
        //tr.find('input,select').attr("name", function () { return this.name.replace(/issDet\[(\d+)/, function (n) { return "issDet\[" + id }) });

        //var uIndex = tr.find('label').text() - 1;
        tr.find('input,select').attr("id", function () { return this.id.replace(/TradersalesAnalysisList_(\d+)/, function (n) { return "TradersalesAnalysisList_" + index }) });
        tr.find('input,select').attr("name", function () { return this.name.replace(/TradersalesAnalysisList\[(\d+)/, function (n) { return "TradersalesAnalysisList\[" + index }) });
    }

    function checkMinRows1(tr) {
        var numRows = tr.closest("tbody")[0].rows.length;
        if (numRows == 1) return false;
        return true;
    }


</script>

@using (Html.BeginForm("UpdatePostAnalysis", "HariSalesAnalysis", FormMethod.Post))
{

<aside class="right-side">

    <section class="content-header" style="text-align:center">
        <h4><b>Issued To Farmer</b> </h4>

    </section>


    @if (ViewBag.Message != null)
    {
    <div class="alert alert-success alert-dismissable">
        <i class="fa fa-check"></i>
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
        @ViewBag.Message
    </div>
    }

    @if (ViewBag.Error != null)
    {
    <div class="alert alert-danger alert-dismissable">
        <i class="fa fa-ban"></i>
        <button class="close" aria-hidden="true" data-dismiss="alert" type="button"></button>
        <b>Error!</b>
        @ViewBag.Error
    </div>  
    }


    <div id="loading">
        <div id="loadingcontent">
            <p id="loadingspinner">
                <img src="~/Images/newLoad.gif" />
            </p>
        </div>
    </div>

    <div class="col-md-12">

        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header">  </div>
                <div class="box-body">

                    <div class="form-group">
                        <label class="black_txt_010">Data Collection Date:<span style="color:Red;">*</span> </label>
                        <div class="input-group date" id="dp3" data-date-format="@Session[" DateFormatLower"]">
                            @Html.TextBoxFor(model => model.CreationDate, new { @class = "form-control", @readonly = "" })
                            <span class="input-group-addon" style="width:auto !important">
                                <i class="glyphicon glyphicon-calendar"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.CreationDate)
                        @Html.HiddenFor(model => model.Id)
                    </div>
                    <div class="form-group">
                        <label class="black_txt_010"> Total Sales Amount :<span style="color:red;">*</span> </label>
                        @Html.TextBoxFor(model => model.TotalAsumingAmount, new { @class = "form-control", @readonly = "readonly" })


                    </div>
                  
                    <div class="form-group">
                        <label class="black_txt_010">Cash Sales: </label>
                        @Html.TextBoxFor(model => model.CashInHand, new { @class = "form-control", @readonly = "readonly" })
                    </div>


                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="box box-primary">
                <div class="box-header">  </div>
                <div class="box-body">

                    <div class="form-group">
                        <label class="black_txt_010">Sales Date:<span style="color:Red;">*</span> </label>
                        <div class="input-group date" id="dp4" data-date-format="@Session["DateFormatLower"]">
                            @Html.TextBoxFor(model => model.SalesDate, new { @class = "form-control", @readonly = "" })
                            <span class="input-group-addon" style="width:auto !important">
                                <i class="glyphicon glyphicon-calendar"></i>
                            </span>
                        </div>
                        @Html.ValidationMessageFor(model => model.SalesDate)
                    </div>

                    <div class="form-group">
                        <label class="black_txt_010"> Collection Amount :<span style="color:Red;">*</span> </label>
                        @Html.TextBoxFor(model => model.ActualSalesAmount, new { @class = "form-control", @readonly = "readonly" })
                    </div>

                    <div class="form-group">
                        <label class="black_txt_010">Bank Sales: </label>
                        @Html.TextBoxFor(model => model.BankTransfer, new { @class = "form-control", @readonly = "readonly" })
                    </div>

                    <input name="" type="submit" id="btnsave" value="Submit" class="btn btn-primary" />

                    <input name="" type="button" id="bak" value="Back" class="btn btn-primary" />

                    <input name="" type="button" id="upsal" value="Update Sales" class="btn btn-success" />
                </div>
            </div>
        </div>


    </div>


    <div class="col-md-12">
        <section class="content-header" style="text-align:center">
            <h4><b>FARMER SALES DETAILS </b></h4>
            </section>
            <div class="box-body table-responsive tblr">
                <table id="SalesListTab" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Trader Name</th>
                            <th>Farmer Name</th>
                            <th>Flock Code</th>
                            <th>Pre Bird(Pc)</th>
                            <th>Pre Bird(Wt)</th>
                            <th>Pre Rate</th>
                            <th>Post Bird(Pc)</th>
                            <th>Post Bird(Wt)</th>
                            <th>Post Rate</th>
                            <th>Actual Bird(pc)</th>
                            <th>Actual Bird(Wt)</th>
                            <th>Actual Rate</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.UnitSalesAnalysisList != null)
                        {
                            for (int i = 0; i < Model.UnitSalesAnalysisList.Count(); i++)
                            {
                        <tr>
                            <td class="">
                                @Html.DropDownListFor(modelItem => Model.UnitSalesAnalysisList[i].TraderId, new SelectList(ViewBag.Trader, "Value", "Text", Model.UnitSalesAnalysisList[i].TraderId), "----SELECT----", new { @class = "form-control seWdth" })
                                @Html.HiddenFor(m => m.UnitSalesAnalysisList[i].Index, new { @class = "ind" })
                                @Html.HiddenFor(m => m.UnitSalesAnalysisList[i].Id)
                            </td>

                            <td class="">
                                @Html.DropDownListFor(modelItem => Model.UnitSalesAnalysisList[i].FarmerId, new SelectList(ViewBag.farmer, "Value", "Text", Model.UnitSalesAnalysisList[i].FarmerId), "----SELECT----", new { @class = "form-control frm_id seWdth" })

                            </td>
                            <td class="">
                                @Html.DropDownListFor(modelItem => Model.UnitSalesAnalysisList[i].FlockId, new SelectList(ViewBag.flock, "value", "text", Model.UnitSalesAnalysisList[i].FlockId), "----Select Product----", new { @class = "form-control flk_id seWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].PreBirdQuantity, new { @class = "form-control spWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].PreBirdsWeight, new { @class = "form-control spWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].PreRate, new { @class = "form-control spWdth spWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].PostBirdQuantity, new { @class = "form-control spWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].PostBirdWeight, new { @class = "form-control spWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].PostRate, new { @class = "form-control spWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].ActualBirdQuantity, new { @class = "form-control spWdth", @readonly = "readonly" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].ActualBirdWeight, new { @class = "form-control spWdth", @readonly = "readonly" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.UnitSalesAnalysisList[i].ActualRate, new { @class = "form-control spWdth", @readonly = "readonly" })
                            </td>
                            <td class="spWdth">
                                <img src="~/Images/icon-add.png" id="imgSalesAdd" class="HandCursor" />
                                <img src="~/Images/icon-delete.png" id="imgSalesDel" class="HandCursor" />
                            </td>
                        </tr>
                            }
                        }
                    </tbody>

                </table>
            </div>
    </div>

    <div class="col-md-12">
        <section class="content-header" style="text-align:center">
            <h4><b>TRADER COLLECTION DETAILS </b></h4>
            <div class="box-body table-responsive tblr">
                <table id="TraderListTab" class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Trader Name</th>
                            <th>Cash Amount</th>
                            <th>Bank Deposit Amount</th>
                            <th>Total Amount</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.TradersalesAnalysisList != null)
                        {
                            for (int i = 0; i < Model.TradersalesAnalysisList.Count(); i++)
                            {
                        <tr>
                            <td class="">
                                @Html.DropDownListFor(modelItem => Model.TradersalesAnalysisList[i].TraderId, new SelectList(ViewBag.Trader, "Value", "Text", Model.TradersalesAnalysisList[i].TraderId), "----SELECT----", new { @class = "form-control seWdth" })
                                @Html.HiddenFor(m => m.TradersalesAnalysisList[i].Index, new { @class = "ind" })
                                @Html.HiddenFor(m => m.TradersalesAnalysisList[i].Id)
                            </td>

                            <td class="">
                                @Html.TextBoxFor(modelItem => Model.TradersalesAnalysisList[i].CashCollection, new { @class = "form-control csh seWdth" })

                            </td>
                            <td class="">
                                @Html.TextBoxFor(modelItem => Model.TradersalesAnalysisList[i].BankCollection, new { @class = "form-control bnk seWdth" })
                            </td>
                            <td class="">
                                @Html.TextBoxFor(m => Model.TradersalesAnalysisList[i].TotalCollection, new { @class = "form-control totalAmo spWdth" })
                            </td>

                            <td class="spWdth">
                                <img src="~/Images/icon-add.png" id="PicTraderAdd" class="HandCursor" />
                                <img src="~/Images/icon-delete.png" id="PicTraderDel" class="HandCursor" />
                            </td>
                        </tr>
                            }
                        }
                    </tbody>

                </table>
            </div>


    </div>

    <div class="modal fade ignore" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
        <div class="example-modal ">
            <div class="modal-warning">
                <div class="">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <h4 class="modal-title">ALERT !!!</h4>
                        </div>
                        <div class="modal-body">
                            <h4 class="msg1"></h4>
                            <input type="hidden" id="StoreId" value="" />
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline" data-dismiss="modal">Close</button>

                        </div>
                    </div>
                    <!-- /.modal-content -->
                </div>
                <!-- /.modal-dialog -->
            </div>
            <!-- /.modal -->
        </div>

    </div>
</aside>
}

