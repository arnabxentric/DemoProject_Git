@model IEnumerable<XenERP.Models.SalesInvoiceModelView>
@{

    var SlNo = 0;
    decimal totalKgs = 0;
    decimal Bags = 0;
    decimal? Kgs = 0;
    decimal netBags = 0;
    decimal netKgs = 0;
    decimal netAmount = 0;
    decimal totalamount = 0;
    decimal totaldiscount = 0;
    decimal loading = 0;
    long oldId = 0;
}
<!--for graph   -->
<!--for graph   -->
<style type="text/css">
    table.dataTable thead .sorting_desc {
        background: url("/Images/sort_desc.png") no-repeat scroll right center #53A9BC;
    }

    table.dataTable thead .sorting_asc {
        background: url("/Images/sort_asc.png") no-repeat scroll right center #53A9BC;
    }
</style>
<script type="text/javascript">
    $(function () {


        $('#example1').dataTable({

            "bPaginate": true,
            "bLengthChange": true,
            "bFilter": true,
            "bSort": true,
            "bInfo": true,
            "bAutoWidth": true
        });
    });
</script>
<style type="text/css">
    .ui-autocomplete-loading {
        background: white url("../../Images/ajax-loader(1).gif") right center no-repeat;
    }

    .marginleft10 {
        margin-left: 10px !important;
    }

    .screenlet-title-bar {
        color: #0099cc;
        font-size: 14pt;
        font-weight: bold;
        height: 24px;
    }

    .ErrorControl {
        background: none repeat scroll;
        border: 1px solid Red;
        padding: 4px;
        width: 96%;
    }

    .pad svg {
        width: 100% !important;
    }
</style>
@*@if (Model.Count() > 0)
    {*@
<aside class="right-side">

    <div class="box box-primary">
        <div class="box-header">

        </div>
        <div class="box-body">

            <div class="box-body table-responsive divContent">

                <table id="example1" width="100%" class="table table-bordered table-striped dataTable" aria-describedby="example1_info">
                    <thead>
                        <tr>

                            <th>
                                SlNo.
                            </th>

                            <th>
                                Date
                            </th>

                            <th>
                                Bill No.
                            </th>

                            <th>
                                Party Name
                            </th>

                            <th>
                                Bags
                            </th>

                            <th>
                               Kgs/Bag
                            </th>
                            <th>
                                Total Kgs
                            </th>
                            <th>
                                Sub total
                            </th>
                            <th>
                                Loading Charges
                            </th>
                            <th>
                                Discount
                            </th>
                            <th>
                                Total Amount
                            </th>


                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {

                            SlNo = SlNo + 1;

                            totalKgs = Math.Round(item.TaxProduct, 3);
                            Bags = Math.Round(item.SubTotal, 0);
                            decimal net = item.TotalAddAmount + item.TotalDeductAmount;
                            //if (item.UnitIdSecondary == 1)
                            //{
                            //    Bags = item.UnitFormula;
                            //    Kgs = item.Quantity;
                            //}
                            //else
                            //{
                            //    Bags = item.Quantity;
                            //    Kgs = item.SecUnitFormula;
                            //}
                            netBags += Bags;
                            netKgs += totalKgs;
                            totalamount += item.RoundOff;
                            totaldiscount += item.DisAmount ?? 0;
                            netAmount += net;
                            decimal discount = item.DisAmount ?? 0;
                           
                            <tr>

                                <td>
                                    @SlNo
                                </td>
                                <td>

                                    @*                   @String.Format(@Session["DateFormatUpper"].ToString(), item.Date)*@

                                    @String.Format("{0:dd/MM/yyyy}", item.CreatedOn)
                                </td>
                                <td align="left">
                                    @Html.DisplayFor(modelItem => item.NO)

                                </td>


                                <td align="left">
                                    @Html.DisplayFor(modelItem => item.DeliveryName)

                                </td>

                                <td align="right">
                                    @Bags
                                </td>
                                <td align="right">

                                    @Math.Round(item.GrandTotal, 2)
                                </td>
                                <td align="right">
                                  
                                    @Math.Round(item.TaxProduct, 2)
                                </td>
                                <td align="right">
                                    @Math.Round(item.RoundOff, 2)

                                </td>
                                @if (oldId == item.Id)
                                {

                                   <td align="right">0</td>
                                }
                                else
                                {
                                <td align="right">
                                    @Math.Round(item.TotalDeductAmount, 2)
                                </td>
                                    loading += item.TotalDeductAmount;
                                }
                                <td align="right">
                                    @Math.Round(discount, 2)

                                </td>
                                <td align="right">
                                    @Math.Round(net, 2)

                                </td>

                            </tr>

                            oldId = item.Id;
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td></td>
                            <td></td>
                            <td>

                                Grand Total


                            </td>

                            <td></td>


                            <td align="right">
                                @netBags

                            </td>
                            <td align="center"></td>
                            
                            <td align="right">
                                @Math.Round(netKgs,2)

                            </td>
                            <td align="right">
                                @Math.Round(totalamount, 2)

                            </td>
                            <td  align="right">
                            @Math.Round(loading, 2)

                            </td>
                            <td align="right">
                                @Math.Round(totaldiscount, 2)

                            </td>
                            <td align="right">
                                @Math.Round(netAmount,2)

                            </td>




                        </tr>
                    </tfoot>

                </table>

            </div>
        </div>
    </div>
</aside>
