@model XenERP.Models.SalesReturnModelView


@using XenERP.Models
@{
    ViewBag.Title = "Sales Return";
    Layout = "~/Views/Shared/_LayoutContra.cshtml";
    var todaydate = DateTime.Today.ToString("dd/MM/yyyy");
}
<link href="../../Content/themes/base/jquery-ui.css" rel="stylesheet" type="text/css" />
@*
<script src="../../js/plugins/datatables/jquery.dataTables.js" type="text/javascript"></script>
        <script src="../../js/plugins/datatables/dataTables.bootstrap.js" type="text/javascript"></script>*@

<script src="../../Scripts/SalesReturn.js" type="text/javascript"></script>
<script src="../../js/plugins/datetimepicker/bootstrap-datepicker.js" type="text/javascript"></script>
 <script src="../../js/jquery-ui-1.10.3.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#noteproducts").click(function () {

            if ($("#noteproducts").val() == "1") {

                $("#tablediv").css("display", "block");
                $("#textdiv").css("display", "none");

            }


        });
        $("#noteothers").click(function () {

            if ($("#noteothers").val() == "2") {

                $("#tablediv").css("display", "none");
                $("#textdiv").css("display", "block");
                $("#example11 > tbody").html("");
                $("#example1 > tbody").html("");

            }



        });


        $('#TaxId,#TotalAmount').change(function (event) {
            var productresults = [];
            var taxid = $('#TaxId').val();

            var tamount = $('#TotalAmount').val();
            var compoundedsub = parseFloat(tamount);

            if (typeof taxid === "undefined" || taxid == '') {
            }
            else {
                var taxComps = $.grep(taxComponents, function (e) { return e.TaxId == taxid; });

                if (taxComps.length != 0) {
                    var effectiveTotal = 0;
                    var parentEffectiveRate = 0;
                    for (var j = 0; j < taxComps.length; j++) {
                        var rate = taxComps[j].Taxrate1;
                        var IsDependTax = taxComps[j].IsDependTax;
                        var IsCompoundedTax = taxComps[j].IsCompoundedTax;
                        var amount1 = 0;
                        if (taxComps[j].IsDependTax == false && taxComps[j].IsCompoundedTax == false) {

                            var crate = parseFloat(rate);
                            parentEffectiveRate = crate * parseFloat(compoundedsub) / 100;
                            effectiveTotal += parentEffectiveRate;
                            amount1 = parentEffectiveRate;
                        }
                        if (IsDependTax == true && IsCompoundedTax == false) {
                            var crate = parseFloat(parentEffectiveRate) * parseFloat(rate) / 100;
                            effectiveTotal += crate;
                            amount1 = crate;
                        }
                        if (IsDependTax == false && IsCompoundedTax == true) {
                            var crate = (effectiveTotal + compoundedsub) * parseFloat(rate) / 100;
                            effectiveTotal += crate;
                            parentEffectiveRate = crate;
                            amount1 = parentEffectiveRate;
                        }

                        var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxComps[j].TaxCompId; });
                        productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxComps[j].Taxrate1 + '%) ',
                            "Amount": amount1
                        });

                    }
                }
                else {
                    var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxid; });
                    var amount1 = (taxMain[0].Rate * parseFloat(compoundedsub) / 100);
                    productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxMain[0].Rate + '%) ',
                        "Amount": amount1
                    });

                }

            }

            var currencyrate = parseFloat($('#Currencyrate').val());
            if (compoundedsub != 0) {
                productresults.push({ "Id": 1, "Name": "Sub Total", "Amount": compoundedsub });
            }

            var result11 = productresults.reduce(function (res, obj) {
                if (!(obj.Name in res))
                    res.__array.push(res[obj.Name] = obj);
                else {
                    res[obj.Name].Id += obj.Id;
                    res[obj.Name].Amount += obj.Amount;
                }
                return res;
            }, { __array: [] }).__array
                                .sort(function (a, b) { return a.Id - b.Id; });

            $("#example11 > tbody").html("");

            var totalbill = 0;
            if (result11 != '') {
                for (var i = 0; i < result11.length; i++) {
                    totalbill += result11[i].Amount;

                    var newRow1 = "<tr> \
                                                        <td>" + result11[i].Name + "</td> \
                                    					<td>" + result11[i].Amount.toFixed(2) + "</td> \
                                                        </tr>"
                    $('#example11 tbody').append(newRow1);
                }
            }

            var tcurrcode = $('#TransactionCurrencyCode').val();
            var bcurrcode = $('#BaseCurrencyCode').val();
            if (tcurrcode != '') {
                tcurrcode = 'In ' + tcurrcode;
                bcurrcode = 'In ' + bcurrcode;
            }
            if (totalbill != 0) {
                var newrow2 = "<tr> \
                                                <td>Grand Total " + tcurrcode + "</td> \
                            					<td>" + totalbill.toFixed(2) + "</td> \
                                                </tr>";
                $('#example11 tbody').append(newrow2);
                if (tcurrcode != bcurrcode) {
                    var bcurrencytotal = totalbill * currencyrate;
                    //bcurrencytotal = Math.round(bcurrencytotal);
                    var newrow2 = "<tr> \
                                                <td>Grand Total " + bcurrcode + "</td> \
                            					<td>" + bcurrencytotal.toFixed(2) + "</td> \
                                                </tr>";
                    $('#example11 tbody').append(newrow2);
                }
            }

        });

    });

    $(document).ready(function () {

        if ('@ViewBag.InvoiceTotalList' != '') {
            //   alert('@ViewBag.podmvList');
            var arrayinv = '@Html.Raw(Json.Encode(ViewBag.InvoiceTotalList))';
            var arrinv = JSON.parse(arrayinv);
            //  alert(arr.length);
            $("#example11 > tbody").html("");
            for (var i = 0; i < arrinv.length; i++) {
                var newRow12 = "<tr> \
                    <td>" + arrinv[i].Name + "</td> \
					<td>" + arrinv[i].Total.toFixed(2) + "</td> \
                    </tr>"
                $('#example11 tbody').append(newRow12);
            }
        }

        $('#errordiv').on('click', '#btnerror', function () {
            $('#errordiv').css("display", "none");
            // e.stopPropagation();
        });

        $("#GroupId").change(function () {

            $.get("/Product/GetParentgroup", { id: $("#GroupId").val() }, function (data) {


                if (data != null) {

                    $("#parentname").val(data);
                }

                if (data == null || data == "") {

                }

            });
        });

        $('#SalesPrice,#TotalAmount').keypress(function (event) {
            if (event.which == 8 || event.which == 37 || event.which == 38 || event.which == 39 || event.which == 0) {
                return true;
            }

            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) && event.which != 8) {

                event.preventDefault();
                return false;

            }
            if (($(this).val().indexOf('.') != -1) && ($(this).val().substring($(this).val().indexOf('.'), $(this).val().indexOf('.').length).length > 2)) {

                event.preventDefault();
            }
        });
        $('#btnProduct').click(function () {
            var Code = $('#Code').val();

            var SalesPrice = $('#SalesPrice').val();
            if (Code == '' || SalesPrice == '') {
                $('#errordiv1').html('');
                $('#errordiv1').css("display", "block");

                if (Code == '') {
                    $('#Code').parents(".form-group:first").addClass("has-error");
                    $('#errordiv1').append('Product Code cannot be blank <br/>');
                }
                else {
                    $('#Code').parents(".form-group:first").removeClass("has-error");
                }
                if (Description == '') {
                    $('#Description').parents(".form-group:first").addClass("has-error");
                    $('#errordiv1').append('Enter Product Name cannot be blank <br/>');
                }
                else {
                    $('#Code').parents(".form-group:first").removeClass("has-error");
                }
                if (SalesPrice == '') {
                    $('#SalesPrice').parents(".form-group:first").addClass("has-error");
                    $('#errordiv1').append('Enter Sales Price <br/>');
                }
                else {
                    $('#SalesPrice').parents(".form-group:first").removeClass("has-error");
                }
                return false;
            }
            else {
                $('#errordiv1').html('');
                $('#errordiv1').css("display", "none");
                var Description = $('#Description').val();
                var UnitId = $('#UnitId').val();
                var GroupId = $('#GroupId').val();
                Code = $('#parentname').val() + '-' + Code;

                $('#btnProduct').css("display", "none");
                $('#loader').css("display", "block");
                $.post('/Product/Create', { 'Code': Code, 'Description': Description, 'UnitId': UnitId, 'GroupId': GroupId, 'SalesPrice': SalesPrice }, function (data, status) {
                    if (data == "Duplicate") {
                        $('#errordiv1').html('');
                        $('#errordiv1').css("display", "block");
                        $('#errordiv1').append('Product with this code already exists <br/>');
                        $('#btnProduct').css("display", "block");
                        $('#loader').css("display", "none");
                        return false;
                    }
                    if (data != 'Failed') {
                        dropDownProduct += '<option value="' + data.Id + '">' + data.Code + '</option>';

                        var ctd = $('#drpProduct').closest('td'); //.attr('id');
                        var ctr = ctd.closest('tr');
                        // alert(ctd);
                        ctd.html('');
                        ctd.html(dropDownProduct);
                        ctd.find('#drpProduct').val(data.Id);

                        var qty = ctr.find('#quantity').val(1);
                        var up = ctr.find('#unitprice').val(data.PurchasePrice);
                        var as = ctr.find('.availabilityhide').val(data.Availability);
                        var tx = ctr.find('#drpTax').val($('#TaxId').val());
                        ctr.find('.uom').val(data.UnitId);
                        ctr.find('.uomhide').val(data.UnitName);
                        var amount = parseFloat(qty.val()) * parseFloat(up.val());
                        var am = ctr.find('.amounthide').val(parseFloat(amount));

                        $('#myModal').modal('hide');
                        $('#Code').val('');
                        $('#Description').val('');
                        $('#UnitId').val('');
                        $('#GroupId').val('');

                        $('#SalesPrice').val('');

                        $('#btnProduct').css("display", "block");
                        $('#loader').css("display", "none");
                    }
                    else {
                        $('#errordiv1').html('');
                        $('#errordiv1').css("display", "block");
                        $('#errordiv1').append('Product create failed <br/>');
                        $('#btnProduct').css("display", "block");
                        $('#loader').css("display", "none");
                        return false;
                    }
                });
            }
        });


        $('#CustomerCode').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Customer/getCustomer',
                    data: { query: request.term },
                    dataType: 'json',
                    type: 'POST',
                    success: function (data) {
                        response($.map(data, function (item) {

                            return {
                                label: item.Code,
                                value: item.Id
                            }
                        }));
                    }
                })
            },
            change: function (event, ui) {

                if (ui.item == null || ui.item == undefined) {
                    $('#CustomerCode').val('');
                    $('#CustomerName').val('');
                    $('#CustomerCode').parents("td:first").removeClass("has-success");
                    $('#CustomerName').parents("td:first").removeClass("has-success");
                    $('#CustomerCode').parents("td:first").addClass("has-error");

                    $('#Currencyrate').val('');
                    $('#TransactionCurrencyCode').val('');
                    $('#tcc').text('Total In Supplier Currency');
                    $('#TransactionCurrency').val('');
                    $('#DeliveryName').val('');
                    $('#StreetPoBox').val('');
                    $('#Suburb').val('');
                    $('#City').val('');
                    $('#StateRegion').val('');
                    $('#Country').val('');
                    $('#PostalCode').val('');
                    $("table#example1").find("tr:gt(0)").remove();

                    for (var i = 0; i < 2; i++) {
                        $add_row();
                    }
                }

            },
            select: function (event, ui) {
                $('#CustomerCode').val(ui.item.label);
                $('#CustomerId').val(ui.item.value);

                $.get('/Customer/checkCustomer', { 'query': ui.item.label }, function (data, status) {


                    if (data == '') {
                        $('#CustomerCode').val('');
                        $('#CustomerName').val('');
                        $('#CustomerCode').parents("td:first").addClass("has-error");
                        $('#CustomerId').val(0);

                        $('#Currencyrate').val('');
                        $('#TransactionCurrencyCode').val('');
                        $('#tcc').text('Total In Supplier Currency');
                        $('#TransactionCurrency').val('');
                        $('#DeliveryName').val('');
                        $('#StreetPoBox').val('');
                        $('#Suburb').val('');
                        $('#City').val('');
                        $('#StateRegion').val('');
                        $('#Country').val('');
                        $('#PostalCode').val('');
                    }
                    else {
                        $('#CustomerCode').parents("td:first").removeClass("has-error");
                        $('#CustomerName').parents("td:first").removeClass("has-error");
                        $('#CustomerCode').parents("td:first").addClass("has-success");
                        $('#CustomerName').parents("td:first").addClass("has-success");
                        $('#CustomerName').val(data.Name);

                        $('#CustomerCode').val(data.Code);
                        $('#CustomerId').val(data.Id);
                        $('#Currencyrate').val(data.CurrencyPurchaseRate);
                        $('#TransactionCurrencyCode').val(data.CurrencyCode);
                        $('#tcc').text('In ' + data.CurrencyCode);
                        $('#TransactionCurrency').val(data.CurrencyId);
                        $('#DeliveryName').val(data.ContactName);
                        $('#StreetPoBox').val(data.DelAddressName);
                        $('#Suburb').val(data.DelSuburb);
                        $('#City').val(data.DelCity);
                        $('#StateRegion').val(data.DelStateRegion);
                        $('#Country').val(data.DelCountry);
                        $('#PostalCode').val(data.DelPostalCode);

                    }

                });
                return false;
            },
            minLength: 1
        });
        $('#CustomerName').autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Customer/getCustomerN',
                    data: { query: request.term },
                    dataType: 'json',
                    type: 'POST',
                    success: function (data) {

                        response($.map(data, function (item) {

                            return {
                                label: item.Name,
                                value: item.Id
                            }
                        }));
                    }
                })
            },
            change: function (event, ui) {
                if (ui.item == null || ui.item == undefined) {
                    $("#CustomerName").val("");
                    $('#CustomerCode').val('');
                    $('#CustomerName').val('');
                    $('#CustomerCode').parents("td:first").removeClass("has-success");
                    $('#CustomerName').parents("td:first").removeClass("has-success");
                    $('#CustomerName').parents("td:first").addClass("has-error");
                    $('#CustomerId').val(0);
                    $('#Currencyrate').val('');
                    $('#TransactionCurrencyCode').val('');
                    $('#tcc').text('Total In Supplier Currency');
                    $('#TransactionCurrency').val('');
                    $('#DeliveryName').val('');
                    $('#StreetPoBox').val('');
                    $('#Suburb').val('');
                    $('#City').val('');
                    $('#StateRegion').val('');
                    $('#Country').val('');
                    $('#PostalCode').val('');
                    $("table#example1").find("tr:gt(0)").remove();

                    for (var i = 0; i < 2; i++) {
                        $add_row();
                    }
                }
            },
            select: function (event, ui) {
                $('#CustomerName').val(ui.item.label);
                $('#CustomerId').val(ui.item.value);

                $.get('/Customer/checkCustomerN', { 'query': ui.item.label }, function (data, status) {



                    if (data == '') {
                        $('#CustomerCode').val('');
                        $('#CustomerName').val('');
                        $('#CustomerCode').parents("td:first").addClass("has-error");

                        $('#TaxId').val('');
                        $('#Currencyrate').val('');
                        $('#TransactionCurrencyCode').val('');
                        $('#tcc').text('Total In Supplier Currency');
                        $('#TransactionCurrency').val('');
                        $('#DeliveryName').val('');
                        $('#StreetPoBox').val('');
                        $('#Suburb').val('');
                        $('#City').val('');
                        $('#StateRegion').val('');
                        $('#Country').val('');
                        $('#PostalCode').val('');

                    }
                    else {
                        $('#CustomerCode').parents("td:first").removeClass("has-error");
                        $('#CustomerName').parents("td:first").removeClass("has-error");
                        $('#CustomerCode').parents("td:first").addClass("has-success");
                        $('#CustomerName').parents("td:first").addClass("has-success");
                        $('#CustomerName').val(data.Name);
                        $('#TaxId').val(data.TaxId);
                        $('#CustomerCode').val(data.Code);
                        $('#CustomerId').val(data.Id);
                        $('#Currencyrate').val(data.CurrencyPurchaseRate);
                        $('#TransactionCurrencyCode').val(data.CurrencyCode);
                        $('#tcc').text('In ' + data.CurrencyCode);
                        $('#TransactionCurrency').val(data.CurrencyId);
                        $('#DeliveryName').val(data.ContactName);
                        $('#StreetPoBox').val(data.DelAddressName);
                        $('#Suburb').val(data.DelSuburb);
                        $('#City').val(data.DelCity);
                        $('#StateRegion').val(data.DelStateRegion);
                        $('#Country').val(data.DelCountry);
                        $('#PostalCode').val(data.DelPostalCode);


                    }

                });
                return false;
            },

            minLength: 1
        });
        




    });
</script>
<script type="text/javascript">

    $(document).ready(function () {

        $("#btnPark").on("click", function (event) {
            $("#Status").val("Saved As Draft");

        });

        $("#btnPlace").on("click", function (event) {
            $("#Status").val("Saved");

        });



        $("form").on("submit", function (event) {

            var isValid = $(this).valid();

            if (isValid) {
                var result = checkproductcount();

                var selectedVal = "";
                var selected = $("input[type='radio'][name='Type']:checked");
                if (selected.length > 0) {
                    selectedVal = selected.val();

                }

                if (result == false && selectedVal == '1') {
                    $('#errordiv').css("display", "block");
                    $('#errordiv').append('You must add atleast one line item');
                    return false;
                }

                $("#loading").fadeIn();
                var opts = {
                    lines: 12, // The number of lines to draw
                    length: 7, // The length of each line
                    width: 4, // The line thickness
                    radius: 10, // The radius of the inner circle
                    color: '#000', // #rgb or #rrggbb
                    speed: 2.0, // Rounds per second
                    trail: 60, // Afterglow percentage
                    shadow: false, // Whether to render a shadow
                    hwaccel: false // Whether to use hardware acceleration
                };
                var target = document.getElementById('loading');
                var spinner = new Spinner(opts).spin(target);
            }

            else {

                //                $("#btnsave").show();
            }


        });





        $("#dp3").datepicker({ autoclose: true, todayHighlight: true });
        $("#dp4").datepicker({ autoclose: true, todayHighlight: true });


        if ('@Model.Type' == '1') {
            $("#noteproducts").prop("checked", true)
            if ('@ViewBag.podmvList' != '') {
                //   alert('@ViewBag.podmvList');
                var array = '@Html.Raw(Json.Encode(ViewBag.podmvList))';
                var arr = JSON.parse(array);
                //  alert(arr.length);
                for (var i = 0; i < arr.length; i++) {

                    $add_rowEdit(arr[i].ItemId, arr[i].ItemCode, arr[i].BarCode, arr[i].ItemName, arr[i].Description, arr[i].Quantity, arr[i].UnitId, arr[i].UnitName, arr[i].SecUnitId, arr[i].SecUnitName, arr[i].SecUnitFormula, arr[i].UnitFormula, arr[i].UnitIdSecondary, arr[i].UnitSecondaryName, arr[i].TotalQuantity, arr[i].Price, arr[i].TaxId, arr[i].TaxName, arr[i].TotalAmount, arr[i].Available);
             
                }

                var cntr = 0;
                var cntrdate = 0;
                var MyRows = $('table#example1').find('tr');
                for (var i = 0; i < MyRows.length; i++) {
                    var product = $(MyRows[i]).find('td:eq(0)');

                    var description = $(MyRows[i]).find('td:eq(3)');
                    var quantity = $(MyRows[i]).find('td:eq(4)');
                    var of = $(MyRows[i]).find('td:eq(6)');
                    var unitprice = $(MyRows[i]).find('td:eq(10)');
                    var tax = $(MyRows[i]).find('td:eq(11)');


                    var descriptionval = description.find('.descriptionhide');
                    var productval = product.find('.producthide');
                    var quantityval = quantity.find('.quantityhide');
                    var ofval = of.find('.ofhide');
                    var unitpriceval = unitprice.find('.unitpricehide');
                    var taxval = tax.find('.taxhide');

                    if ('@ViewBag.Supply' != '') {
                        if (cntr == 0) {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            $('#errordiv').append(cntr + '   ' + '@ViewBag.Supply' + '<br/>');
                        }
                    }
                    if ('@ViewBag.Date' != '') {
                        if ((cntr == 0 || cntr == 1) && cntrdate == 0) {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            $('#errordiv').append(cntr + '   ' + '@ViewBag.Date' + '<br/>');
                            cntrdate++;
                        }
                    }
                    if (!(productval.val() == '' && descriptionval.val() == '' && quantityval.val() == '' && unitpriceval.val() == '' && taxval.val() == '')) {
                        if (productval.val() == '') {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            productval.addClass('input-red-shadow');
                            $('#errordiv').append(cntr + '   Product not selected <br/>');
                        }

                        if (quantityval.val() == 0) {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            quantityval.addClass('input-red-shadow');
                            $('#errordiv').append(cntr + '   Quantity cannot be empty<br/>');
                        }
                        if (ofval.val() == 0) {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            ofval.addClass('input-red-shadow');
                            $('#errordiv').append(cntr + '   Of cannot be empty<br/>');
                        }

                        if (unitpriceval.val() == 0) {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            $('#errordiv').append(cntr + '   Unit Price cannot be empty<br/>');
                            unitpriceval.addClass('input-red-shadow');
                        }
                        if (taxval.val() == '') {
                            cntr++;
                            $('#errordiv').css("display", "block");
                            taxval.addClass('input-red-shadow');
                            $('#errordiv').append(cntr + '   Tax not selected<br/>');
                        }


                    }
                }
            }
            else {
                for (var i = 0; i < 2; i++) {
                    $add_row();
                }

            }
        }
        else {
            $("#noteothers").prop("checked", true)
            $("#tablediv").css("display", "none");
            $("#textdiv").css("display", "block");
        }

    });
</script>
<script type="text/javascript">
    var tid = '';
    $(document).ready(function () {
        $('#example1').on('click', 'tr', function (e) {
            $('#showtotal').css("display", "none");

            if ($('#CustomerCode').val() == '') {
                $('#errordiv').css("display", "block");
                $('#errordiv').html('');
                $('#errordiv').append("<i class='fa fa-ban'></i><button id='btnerror' class='close'  type='button'>×</button><b>Error!</b><br />");
                $('#errordiv').append('Enter Customer Code Or Customer Name');
                $("html, body").animate({ scrollTop: 0 }, "slow");
                return false;

            }
            else {
                $('#errordiv').html('');
                $('#errordiv').css("display", "none");
            }

            var counter = 0;
            var totalamount = 0;
            var totaltax = 0;

            var productresults = [];
            var subtotal = 0;

            var MyRows = $('table#example1').find('tr');
            for (var i = 1; i < MyRows.length; i++) {
                var product = $(MyRows[i]).find('td:eq(0)');
                var code = $(MyRows[i]).find('td:eq(1)');
                var barcode = $(MyRows[i]).find('td:eq(2)');
                var description = $(MyRows[i]).find('td:eq(3)');
                var quantity = $(MyRows[i]).find('td:eq(4)');
                var uom = $(MyRows[i]).find('td:eq(5)');
                var of = $(MyRows[i]).find('td:eq(6)');
                var baseuom = $(MyRows[i]).find('td:eq(7)');
                var unitprice = $(MyRows[i]).find('td:eq(10)');
                var tax = $(MyRows[i]).find('td:eq(11)');
                var amount = $(MyRows[i]).find('td:eq(12)');
                var producthide = $(MyRows[i]).find('td:eq(13)');
                var taxhide = $(MyRows[i]).find('td:eq(14)');
                var uomhide = $(MyRows[i]).find('td:eq(15)');
                var baseuomhide = $(MyRows[i]).find('td:eq(16)');

                var productval = product.find('#drpProduct').val();
                var productdtext = product.find('#drpProduct option:selected').text();
                var codeval = code.find('#productcode').val();
                var barcodeval = barcode.find('#barcode').val();
                var descriptionval = description.find('#description').val();
                var quantityval = quantity.find('#quantity').val();
                var unitpriceval = unitprice.find('#unitprice').val();
                var taxval = tax.find('#drpTax').val();
                var taxdtext = tax.find('#drpTax option:selected').text();
                var uomval = uom.find('#drpUom').val();
                var uomdtext = uom.find('#drpUom option:selected').text();
                var ofval = of.find('#of').val();

                if (productval != null) {
                    counter = 1;
                    product.html('');
                    product.html("<input type='text' value=''  class='producthide input-non-active' name='producthide' readonly /> ");
                    if (productval == '' || productval == 'addnew') {
                        product.find('.producthide').val('');
                    }
                    else {
                        product.find('.producthide').val(productdtext);
                    }

                    producthide.find('.product').val(productval);
                }
                if (codeval != null) {
                    code.html('');
                    code.html("<input type='text' value=''  class='productcodehide input-non-active'  name='productcodehide' readonly /> ");
                    code.find('.productcodehide').val(codeval);
                }
                if (barcodeval != null) {
                    barcode.html('');
                    barcode.html("<input type='text' value=''  class='barcodehide input-non-active'  name='barcodehide' readonly /> ");
                    barcode.find('.barcodehide').val(barcodeval);
                }
                if (descriptionval != null) {
                    description.html('');
                    description.html("<input type='text' value=''  class='descriptionhide input-non-active'  name='descriptionhide' readonly /> ");
                    description.find('.descriptionhide').val(descriptionval);
                }
                if (quantityval != null) {
                    quantity.html('');
                    quantity.html("<input type='text' value='' style='text-align:right;'  class='quantityhide input-non-active' name='quantityhide' readonly /> ");
                    quantity.find('.quantityhide').val(quantityval);
                }

                if (taxval != null) {
                    tax.html('');
                    tax.html("<input type='text' value=''  class='taxhide input-non-active' name='taxhide' readonly /> ");
                    if (taxval == '') {
                        tax.find('.taxhide').val('');
                    }
                    else {
                        tax.find('.taxhide').val(taxdtext);
                    }

                    taxhide.find('.tax').val(taxval);
                }
                if (uomval != null) {
                    uom.html('');
                    uom.html("<input type='text' value=''  class='uomhide input-non-active' name='uomhide' readonly /> ");
                    if (uomval == '') {
                        uom.find('.uomhide').val('');
                    }
                    else {
                        uom.find('.uomhide').val(uomdtext);
                    }

                    uomhide.find('.uom').val(uomval);
                }
                if (ofval != null) {
                    of.html('');
                    of.html("<input type='text' value='' style='text-align:right;'  class='ofhide input-non-active' name='ofhide' readonly /> ");
                    of.find('.ofhide').val(ofval);
                }
                if (unitpriceval != null) {
                    unitprice.html('');
                    unitprice.html("<input type='text' value=''  class='unitpricehide input-non-active' style='text-align:right;' name='unitpricehide' readonly /> ");
                    unitprice.find('.unitpricehide').val(unitpriceval);

                }


                var checkproduct = $(MyRows[i]).find('.product');

                if (checkproduct.val() != null && checkproduct.val() != '') {
                    var qty = 0;
                    var up = 0;
                    var tx = 0;
                    var ofd = 0;
                    var calquantity = quantity.find('.quantityhide').val();

                   
                    var calunitprice = unitprice.find('.unitpricehide').val();
                    var caltax = tax.find('.taxhide').val();
                    var calamount = amount.find('.amounthide').val();
                    var calof = of.find('.ofhide').val();
                    if (calquantity != '') {
                        qty = parseFloat(calquantity);
                    }
                    else {
                        qty = 0;
                    }
                    if (calunitprice != '') {
                        up = parseFloat(calunitprice);
                    }
                    else {
                        up = 0;
                    }
                    if (caltax != '') {
                        var arr = caltax.split('-');
                        tx = parseFloat(arr[arr.length - 1]);
                    }
                    else {
                        tx = 0;
                    }
                   
                    if (calof != '') {
                        ofd = parseFloat(calof);
                    }
                    else {
                        ofd = 0;
                    }

                    var np = qty * up ;
                    // var currentdis = np * dis / 100;
                    var currentsub = np;
                    subtotal += currentsub;


                    // totaldiscount += currentdis;
                    //  totaltax += tx * currentsub / 100;
                    var compoundedsub = currentsub;
                    //  amount.find('.amounthide').val(currentsub.toFixed(2));
                    var taxid = taxhide.find('.tax').val();

                    if (typeof taxid === "undefined" || taxid == '') {
                    }
                    else {
                        var taxComps = $.grep(taxComponents, function (e) { return e.TaxId == taxid; });

                        if (taxComps.length != 0) {
                            var effectiveTotal = 0;
                            var parentEffectiveRate = 0;
                            for (var j = 0; j < taxComps.length; j++) {
                                var rate = taxComps[j].Taxrate1;
                                var IsDependTax = taxComps[j].IsDependTax;
                                var IsCompoundedTax = taxComps[j].IsCompoundedTax;
                                var amount1 = 0;
                                if (taxComps[j].IsDependTax == false && taxComps[j].IsCompoundedTax == false) {

                                    var crate = parseFloat(rate);
                                    parentEffectiveRate = crate * parseFloat(compoundedsub) / 100;
                                    effectiveTotal += parentEffectiveRate;
                                    amount1 = parentEffectiveRate;
                                }
                                if (IsDependTax == true && IsCompoundedTax == false) {
                                    var crate = parseFloat(parentEffectiveRate) * parseFloat(rate) / 100;
                                    effectiveTotal += crate;
                                    amount1 = crate;
                                }
                                if (IsDependTax == false && IsCompoundedTax == true) {
                                    var crate = (effectiveTotal + compoundedsub) * parseFloat(rate) / 100;
                                    effectiveTotal += crate;
                                    parentEffectiveRate = crate;
                                    amount1 = parentEffectiveRate;
                                }

                                var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxComps[j].TaxCompId; });
                                productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxComps[j].Taxrate1 + '%) on Product',
                                    "Amount": amount1
                                });

                            }
                        }
                        else {
                            var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxid; });
                            var amount1 = (taxMain[0].Rate * parseFloat(compoundedsub) / 100);
                            productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxMain[0].Rate + '%) on Product',
                                "Amount": amount1
                            });
                        }

                    }
                    // amount.find('.amounthide').val(currentsub.toFixed(2));
                }
            }
            var currencyrate = parseFloat($('#Currencyrate').val());
            if (subtotal != 0) {
                productresults.push({ "Id": 1, "Name": "Sub Total", "Amount": subtotal });
            }

            var result11 = productresults.reduce(function (res, obj) {
                if (!(obj.Name in res))
                    res.__array.push(res[obj.Name] = obj);
                else {
                    res[obj.Name].Id += obj.Id;
                    res[obj.Name].Amount += obj.Amount;
                }
                return res;
            }, { __array: [] }).__array
                                .sort(function (a, b) { return a.Id - b.Id; });
            // alert(result11.length);
            $("#example11 > tbody").html("");
            var totalbill = 0;
            if (result11 != '') {
                for (var i = 0; i < result11.length; i++) {
                    totalbill += result11[i].Amount;
                    var newRow1 = "<tr> \
                                    <td>" + result11[i].Name + "</td> \
                					<td>" + result11[i].Amount.toFixed(2) + "</td> \
                                    </tr>"
                    $('#example11 tbody').append(newRow1);
                }
            }

            var tcurrcode = $('#TransactionCurrencyCode').val();
            var bcurrcode = $('#BaseCurrencyCode').val();
            if (tcurrcode != '') {
                tcurrcode = 'In ' + tcurrcode;
                bcurrcode = 'In ' + bcurrcode;
            }
            if (totalbill != 0) {
                var newrow2 = "<tr> \
                                                <td>Grand Total " + tcurrcode + "</td> \
                            					<td>" + totalbill.toFixed(2) + "</td> \
                                                </tr>";
                $('#example11 tbody').append(newrow2);
                if (tcurrcode != bcurrcode) {
                    var bcurrencytotal = totalbill * currencyrate;
                    //bcurrencytotal = Math.round(bcurrencytotal);
                    var newrow2 = "<tr> \
                                                <td>Grand Total " + bcurrcode + "</td> \
                            					<td>" + bcurrencytotal.toFixed(2) + "</td> \
                                                </tr>";
                    $('#example11 tbody').append(newrow2);
                }
            }

            if ((tid == this.id && counter != 1) || (tid != this.id)) {

                tid = this.id;



                var product = $(this).find('td.products_0');
                var productval = $(this).find('.product').val();
                var code = $(this).find('td.productcode_0');
                var codetext = code.find('.productcodehide').val();
                var barcode = $(this).find('td.barcode_0');
                var barcodetext = barcode.find('.barcodehide').val();
                var description = $(this).find('td.description_0');
                var descriptiontext = description.find('.descriptionhide').val();
                var quantity = $(this).find('td.quantity_0');
                var quantitytext = quantity.find('.quantityhide').val();
                var unitprice = $(this).find('td.unitprice_0');
                var unitpricetext = unitprice.find('.unitpricehide').val();
                var tax = $(this).find('td.taxes_0');
                var taxval = $(this).find('.tax').val();
                var uom = $(this).find('td.uom_0');
                var uomval = $(this).find('.uom').val();
                var uomtext = $(this).find('.uomhide').val();
                var baseuom = $(this).find('td.baseuom_0');
                var baseuomval = $(this).find('.baseuom').val();
                var baseuomtext = $(this).find('.baseuomhide').val();
                var secuomval = $(this).find('.secuom').val();
                var secuomtext = $(this).find('.secuomhide').val();
                var of = $(this).find('td.of_0');
                var oftext = of.find('.ofhide').val();
                if (productval != '') {
                    var dropDownUOM = '<select id="drpUom" class="form-control">';


                    if (!(secuomval == null || secuomval == '')) {
                        dropDownUOM += '<option value="' + secuomval + '">' + secuomtext + '</option>';

                    }
                    dropDownUOM += '<option value="' + baseuomval + '">' + baseuomtext + '</option>';

                    dropDownUOM += '</select>';

                    uom.html('');
                    uom.html(dropDownUOM);
                    uom.find('#drpUom').val(uomval);
                }


                product.html('');
                product.html(dropDownProduct);
                code.html('');
                code.html("<input id='productcode' style='text-align:left;' class ='form-control'  type='text' value=''/> ");
                barcode.html('');
                barcode.html("<input id='barcode' style='text-align:left;' class ='form-control'  type='text' value=''/> ");
                description.html('');
                description.html("<div class='textarea-panel'><textarea id='description' class ='form-control '  style='width: 100%; height: 200%;'  value=''/> </div>");
                quantity.html('');
                quantity.html("<input id='quantity' style='text-align:right;' class ='form-control' style='text-align:right;' type='text' value=''/> ");
                unitprice.html('');
                unitprice.html("<input id='unitprice' class ='form-control' style='text-align:right;' type='text' value=''/> ");
                of.html('');
                of.html("<input id='of' class ='form-control' style='text-align:right;' type='text' value=''/> ");
                tax.html('');
                tax.html(dropDownTax);
                //   if (productval != 'null') {
                product.find('#drpProduct').val(productval);
                code.find('#productcode').val(codetext);
                barcode.find('#barcode').val(barcodetext);
                //  }
                description.find('#description').val(descriptiontext);
                quantity.find('#quantity').val(quantitytext);
                unitprice.find('#unitprice').val(unitpricetext);
                // if (taxval != 'null') {
                tax.find('#drpTax').val(1);
                of.find('#of').val(oftext);
                //   }
               

            }

            e.stopPropagation();



        })
        .on('click', '#description,#drpProduct,#drpUom,#quantity,#unitprice,#drpTax,#taxhide,#amounthide,#of,#productcode,#barcode', function (e) {

            e.stopPropagation();
        })

         .on('change', '#drpProduct', function (e) {
             var pid = $('#drpProduct').val();
             var trObj = $(this).closest('tr');
             if (pid == '') {
                 var pcode = trObj.find('#productcode').val('');
                 var qty = trObj.find('#quantity').val('');
                 var up = trObj.find('#unitprice').val('');
                 var as = trObj.find('.availabilityhide').val('');
                 var tx = trObj.find('#drpTax').val($('').val());
                 var am = trObj.find('.amounthide').val('');

                 trObj.find('.baseuom').val('');
                 trObj.find('.baseuomhide').val('');
                 trObj.find('.ofhide').val('');
                 trObj.find('#of').val('');
                 trObj.find('.secuom').val('');
                 trObj.find('.secuomhide').val('');
                 trObj.find('.secofhide').val('');
                 uom.html('');
                 uom.html("<input type='text' value=''  class='uomhide input-non-active' name='uomhide' readonly /> ");
                 uom.find('.uomhide').val('');
                 trObj.find('.uom').val('');
                 trObj.find('.totalquantityhide').val('');

             }
             else if (pid != 'addnew') {
                 $.get('/Product/getSelectedProduct', { 'id': pid }, function (data, status) {
                     var pcode = trObj.find('#productcode').val(data.Name);
                     var qty = trObj.find('#quantity').val(1);
                     if (data.SalesPrice == null) {
                         data.SalesPrice = 0;
                     }
                     var up = trObj.find('#unitprice').val(data.SalesPrice);
                     var as = trObj.find('.availabilityhide').val(data.Availability);
                     var tx = trObj.find('#drpTax').val(1);
                     trObj.find('.uom').val(data.UnitIdSecondary);
                     trObj.find('.uomhide').val(data.UnitNameSecondary);
                     trObj.find('.baseuom').val(data.UnitId);
                     trObj.find('.baseuomhide').val(data.UnitName);
                     trObj.find('.ofhide').val(data.UnitFormula);
                     trObj.find('.secuom').val(data.UnitIdSecondary);
                     trObj.find('.secuomhide').val(data.UnitNameSecondary);
                     trObj.find('.secofhide').val(data.UnitFormula);
                     trObj.find('#of').val(data.UnitFormula);
                     var uom = trObj.find('td.uom_0');
                     var uomval = trObj.find('.uom').val();
                     var uomtext = trObj.find('.uomhide').val();
                     var baseuom = trObj.find('td.baseuom_0');
                     var baseuomval = trObj.find('.baseuom').val();
                     var baseuomtext = trObj.find('.baseuomhide').val();
                     var secuomval = trObj.find('.secuom').val();
                     var secuomtext = trObj.find('.secuomhide').val();

                     var dropDownUOM = '<select id="drpUom" class="form-control">';

                     if (!(secuomval == null || secuomval == '')) {
                         dropDownUOM += '<option value="' + secuomval + '">' + secuomtext + '</option>';

                     }
                     dropDownUOM += '<option value="' + baseuomval + '">' + baseuomtext + '</option>';

                     dropDownUOM += '</select>';
                     uom.html('');
                     uom.html(dropDownUOM);
                     trObj.find('.totalquantityhide').val(qty.val());
                     var amount = parseFloat(qty.val()) * parseFloat(up.val());
                     var am = trObj.find('.amounthide').val(parseFloat(amount));
                 });
             }
             else {
                 $('#myModal').modal('show');
                 var pcode = trObj.find('#productcode').val('');
                 var qty = trObj.find('#quantity').val('');
                 var up = trObj.find('#unitprice').val('');
                 var as = trObj.find('.availabilityhide').val('');
                 var tx = trObj.find('#drpTax').val($('').val());
                 var am = trObj.find('.amounthide').val('');
                 trObj.find('#uom').val('');
                 trObj.find('.uomhide').val('');
             }



             e.stopPropagation();
         })
          .on('keydown.autocomplete', '#productcode', function (e) {

              $(this).autocomplete({
                  source: function (request, response) {
                      $.ajax({
                          url: '/Product/getProductsAuto',
                          data: { query: request.term },
                          dataType: 'json',
                          type: 'POST',
                          success: function (data) {

                              response($.map(data, function (item) {

                                  return {
                                      label: item.Code,
                                      value: item.Id
                                  }
                              }));
                          }
                      })
                  },
                  change: function (event, ui) {
                      var trObj = $(this).closest('tr');
                      if (ui.item == null || ui.item == undefined) {
                          var pname = trObj.find('#productcode').val('');
                          var pcode = trObj.find('#drpProduct').val('');
                          var qty = trObj.find('#quantity').val('');
                          var up = trObj.find('#unitprice').val('');
                          var as = trObj.find('.availabilityhide').val('');
                          var tx = trObj.find('#drpTax').val($('').val());
                          var am = trObj.find('.amounthide').val('');
                          var uom = trObj.find('td.uom_0');
                         

                          trObj.find('.baseuom').val('');
                          trObj.find('.baseuomhide').val('');
                          trObj.find('.ofhide').val('');
                          trObj.find('#of').val('');
                          trObj.find('.secuom').val('');
                          trObj.find('.secuomhide').val('');
                          trObj.find('.secofhide').val('');
                          uom.html('');
                          uom.html("<input type='text' value=''  class='uomhide input-non-active' name='uomhide' readonly /> ");
                          uom.find('.uomhide').val('');
                          trObj.find('.uom').val('');
                          trObj.find('.totalquantityhide').val('');
                      }
                  },
                  select: function (event, ui) {
                      // $('#SupplierName').val(ui.item.label);
                      $('#drpProduct').val(ui.item.value);
                      $('#productcode').val(ui.item.label);
                      var trObj = $(this).closest('tr');
                      $.get('/Product/getSelectedProductAuto', { 'query': ui.item.value }, function (data, status) {
                          if (data == '') {

                              var pname = trObj.find('#productcode').val('');
                              var pcode = trObj.find('#drpProduct').val('');
                              var qty = trObj.find('#quantity').val('');
                              var up = trObj.find('#unitprice').val('');
                              var as = trObj.find('.availabilityhide').val('');
                              var tx = trObj.find('#drpTax').val($('').val());
                              var am = trObj.find('.amounthide').val('');
                              var uom = trObj.find('td.uom_0');
                             

                              trObj.find('.baseuom').val('');
                              trObj.find('.baseuomhide').val('');
                              trObj.find('.ofhide').val('');
                              trObj.find('#of').val('');
                              trObj.find('.secuom').val('');
                              trObj.find('.secuomhide').val('');
                              trObj.find('.secofhide').val('');
                              uom.html('');
                              uom.html("<input type='text' value=''  class='uomhide input-non-active' name='uomhide' readonly /> ");
                              uom.find('.uomhide').val('');
                              trObj.find('.uom').val('');
                              trObj.find('.totalquantityhide').val('');
                          }
                          else {
                              var pname = trObj.find('#productcode').val(data.Name);
                              var pcode = trObj.find('#drpProduct').val(data.Id);
                              var qty = trObj.find('#quantity').val(1);
                              if (data.SalesPrice == null) {
                                  data.SalesPrice = 0;
                              }
                              var up = trObj.find('#unitprice').val(data.SalesPrice);
                              var as = trObj.find('.availabilityhide').val(data.Availability);
                              var tx = trObj.find('#drpTax').val(1);
                              trObj.find('.uom').val(data.UnitIdSecondary);
                              trObj.find('.uomhide').val(data.UnitNameSecondary);
                              trObj.find('.baseuom').val(data.UnitId);
                              trObj.find('.baseuomhide').val(data.UnitName);
                              trObj.find('.ofhide').val(data.UnitFormula);
                              trObj.find('.secuom').val(data.UnitIdSecondary);
                              trObj.find('.secuomhide').val(data.UnitNameSecondary);
                              trObj.find('.secofhide').val(data.UnitFormula);
                              trObj.find('#of').val(data.UnitFormula);
                              var uom = trObj.find('td.uom_0');
                              var uomval = trObj.find('.uom').val();
                              var uomtext = trObj.find('.uomhide').val();
                              var baseuom = trObj.find('td.baseuom_0');
                              var baseuomval = trObj.find('.baseuom').val();
                              var baseuomtext = trObj.find('.baseuomhide').val();
                              var secuomval = trObj.find('.secuom').val();
                              var secuomtext = trObj.find('.secuomhide').val();

                              var dropDownUOM = '<select id="drpUom" class="form-control">';

                              if (!(secuomval == null || secuomval == '')) {
                                  dropDownUOM += '<option value="' + secuomval + '">' + secuomtext + '</option>';

                              }
                              dropDownUOM += '<option value="' + baseuomval + '">' + baseuomtext + '</option>';

                              dropDownUOM += '</select>';

                              uom.html('');
                              uom.html(dropDownUOM);
                              trObj.find('.totalquantityhide').val(qty.val());
                              var amount = parseFloat(qty.val()) * parseFloat(up.val());
                              var am = trObj.find('.amounthide').val(parseFloat(amount));

                          }
                      });
                      return false;
                  },
                  minLength: 1
              });
              e.stopPropagation();
          })
          .on('keypress', '#quantity, #unitprice, #of', function (event) {

              if (event.which == 8 || event.which == 37 || event.which == 38 || event.which == 39 || event.which == 0) {
                  return true;
              }

              if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57) && event.which != 8) {

                  event.preventDefault();
                  return false;

              }
              if (($(this).val().indexOf('.') != -1) && ($(this).val().substring($(this).val().indexOf('.'), $(this).val().indexOf('.').length).length > 2)) {

                  event.preventDefault();
              }
              event.stopPropagation();

          })
           .on('change', '#quantity, #unitprice,#of', function (event) {

               var trObj = $(this).closest('tr');
               var qtyem = trObj.find('#quantity');
               var upem = trObj.find('#unitprice');
               var ofem = trObj.find('#of');

               var amem = trObj.find('.amounthide');
               var qty = qtyem.val();
               var up = upem.val();
               var of = ofem.val();

               if (qty == '.' || qty == '') {
                   qty = 0;
                   qtyem.val(0);

               }
               if (up == '.' || up == '') {
                   up = 0;
                   upem.val(0);
               }
               
               if (of == '.' || of == '' || of == 0) {
                   of = 1;
                   ofem.val(1);
               }


               var totqty = parseFloat(qty);
               trObj.find('.totalquantityhide').val(totqty);
               var pq = parseFloat(qty) * parseFloat(up);

               var am = pq;

               amem.val(am.toFixed(2));
               event.stopPropagation();
           })
          .on('click', '.del_ExpenseRow', function (e) {
              $(this).closest('tr').remove();

              //  e.stopPropagation();

          })
           .on('change', '#drpUom', function (e) {

               var uid = $('#drpUom').val();
               var trObj = $(this).closest('tr');

               var scm = trObj.find('.secuom').val();
               var soh = trObj.find('.secofhide');
               if (uid == scm) {

                   //  alert(soh);
                   var qty = trObj.find('#quantity');
                   var up = trObj.find('#unitprice');

                   //  trObj.find('#totalquantityhide').val();

                   trObj.find('#of').val(soh.val());
                   var totamount = parseFloat(qty.val());
                   trObj.find('.totalquantityhide').val(totamount);
                   var amount = parseFloat(qty.val()) * parseFloat(up.val());
                   var am = trObj.find('.amounthide').val(parseFloat(amount));
               }
               else {
                   var qty = trObj.find('#quantity');
                   trObj.find('#of').val(1);
                   trObj.find('.totalquantityhide').val(qty.val());
                   var up = trObj.find('#unitprice');
                   var amount = parseFloat(qty.val()) * parseFloat(up.val()) / parseFloat(soh.val());
                   trObj.find('.amounthide').val(parseFloat(amount).toFixed(2));
               }
               e.stopPropagation();
           }).on('keydown', '.producthide', function (e) {

               if (e.keyCode == 9) {
                   $(this).trigger('click');
               }
           }).on('keydown', '.amounthide', function (e) {

               if (e.keyCode == 9) {

                   $('#add_ExpenseRow').trigger('click');
               }
           });

    });
</script>
<script type="text/javascript">
    $(document).click(function () {
        $(".ignore").click(function () {
            return false;
        });
        var selectedVal = "";
        var selected = $("input[type='radio'][name='Type']:checked");
        if (selected.length > 0) {
            selectedVal = selected.val();

        }
        if (selectedVal == '1') {
            $('#showtotal').css("display", "none");
            var counter = 0;
            var totalamount = 0;
            var totaltax = 0;

            var subtotal = 0;

            var productresults = [];
            var MyRows = $('table#example1').find('tr');
            for (var i = 1; i < MyRows.length; i++) {
                var product = $(MyRows[i]).find('td:eq(0)');
                var code = $(MyRows[i]).find('td:eq(1)');
                var barcode = $(MyRows[i]).find('td:eq(2)');
                var description = $(MyRows[i]).find('td:eq(3)');
                var quantity = $(MyRows[i]).find('td:eq(4)');
                var uom = $(MyRows[i]).find('td:eq(5)');
                var of = $(MyRows[i]).find('td:eq(6)');
                var baseuom = $(MyRows[i]).find('td:eq(7)');
                var unitprice = $(MyRows[i]).find('td:eq(10)');
                var tax = $(MyRows[i]).find('td:eq(11)');
                var amount = $(MyRows[i]).find('td:eq(12)');
                var producthide = $(MyRows[i]).find('td:eq(13)');
                var taxhide = $(MyRows[i]).find('td:eq(14)');
                var uomhide = $(MyRows[i]).find('td:eq(15)');
                var baseuomhide = $(MyRows[i]).find('td:eq(16)');

                var productval = product.find('#drpProduct').val();
                var productdtext = product.find('#drpProduct option:selected').text();
                var codeval = code.find('#productcode').val();
                var barcodeval = barcode.find('#barcode').val();
                var descriptionval = description.find('#description').val();
                var quantityval = quantity.find('#quantity').val();
                var unitpriceval = unitprice.find('#unitprice').val();
                var taxval = tax.find('#drpTax').val();
                var taxdtext = tax.find('#drpTax option:selected').text();
                var uomval = uom.find('#drpUom').val();
                var uomdtext = uom.find('#drpUom option:selected').text();
                var ofval = of.find('#of').val();

                if (productval != null) {
                    counter = 1;
                    product.html('');
                    product.html("<input type='text' value=''  class='producthide input-non-active' name='producthide' readonly /> ");
                    if (productval == '' || productval == 'addnew') {
                        product.find('.producthide').val('');
                    }
                    else {
                        product.find('.producthide').val(productdtext);
                    }

                    producthide.find('.product').val(productval);
                }
                if (codeval != null) {
                    code.html('');
                    code.html("<input type='text' value=''  class='productcodehide input-non-active'  name='productcodehide' readonly /> ");
                    code.find('.productcodehide').val(codeval);
                }
                if (barcodeval != null) {
                    barcode.html('');
                    barcode.html("<input type='text' value=''  class='barcodehide input-non-active'  name='barcodehide' readonly /> ");
                    barcode.find('.barcodehide').val(barcodeval);
                }
                if (descriptionval != null) {
                    description.html('');
                    description.html("<input type='text' value=''  class='descriptionhide input-non-active'  name='descriptionhide' readonly /> ");
                    description.find('.descriptionhide').val(descriptionval);
                }
                if (quantityval != null) {
                    quantity.html('');
                    quantity.html("<input type='text' value='' style='text-align:right;'  class='quantityhide input-non-active' name='quantityhide' readonly /> ");
                    quantity.find('.quantityhide').val(quantityval);
                }

                if (taxval != null) {
                    tax.html('');
                    tax.html("<input type='text' value=''  class='taxhide input-non-active' name='taxhide' readonly /> ");
                    if (taxval == '') {
                        tax.find('.taxhide').val('');
                    }
                    else {
                        tax.find('.taxhide').val(taxdtext);
                    }

                    taxhide.find('.tax').val(taxval);
                }
                if (uomval != null) {
                    uom.html('');
                    uom.html("<input type='text' value=''  class='uomhide input-non-active' name='uomhide' readonly /> ");
                    if (uomval == '') {
                        uom.find('.uomhide').val('');
                    }
                    else {
                        uom.find('.uomhide').val(uomdtext);
                    }

                    uomhide.find('.uom').val(uomval);
                }
                if (ofval != null) {
                    of.html('');
                    of.html("<input type='text' value='' style='text-align:right;'  class='ofhide input-non-active' name='ofhide' readonly /> ");
                    of.find('.ofhide').val(ofval);
                }
                if (unitpriceval != null) {
                    unitprice.html('');
                    unitprice.html("<input type='text' value=''  class='unitpricehide input-non-active' style='text-align:right;' name='unitpricehide' readonly /> ");
                    unitprice.find('.unitpricehide').val(unitpriceval);

                }


                var checkproduct = $(MyRows[i]).find('.product');

                if (checkproduct.val() != null && checkproduct.val() != '') {
                    var qty = 0;
                    var up = 0;
                    var tx = 0;
                    var ofd = 0;
                    var calquantity = quantity.find('.quantityhide').val();


                    var calunitprice = unitprice.find('.unitpricehide').val();
                    var caltax = tax.find('.taxhide').val();
                    var calamount = amount.find('.amounthide').val();
                    var calof = of.find('.ofhide').val();
                    if (calquantity != '') {
                        qty = parseFloat(calquantity);
                    }
                    else {
                        qty = 0;
                    }
                    if (calunitprice != '') {
                        up = parseFloat(calunitprice);
                    }
                    else {
                        up = 0;
                    }
                    if (caltax != '') {
                        var arr = caltax.split('-');
                        tx = parseFloat(arr[arr.length - 1]);
                    }
                    else {
                        tx = 0;
                    }

                    if (calof != '') {
                        ofd = parseFloat(calof);
                    }
                    else {
                        ofd = 0;
                    }

                    var np = qty * up ;
                    var currentsub = np;
                    subtotal += currentsub;
                    //  totaldiscount += currentdis;
                    // totaltax += tx * currentsub / 100;
                    var compoundedsub = currentsub;
                    //  amount.find('.amounthide').val(currentsub.toFixed(2));
                    var taxid = taxhide.find('.tax').val();

                    if (typeof taxid === "undefined" || taxid == '') {
                    }
                    else {
                        var taxComps = $.grep(taxComponents, function (e) { return e.TaxId == taxid; });

                        if (taxComps.length != 0) {
                            var effectiveTotal = 0;
                            var parentEffectiveRate = 0;
                            for (var j = 0; j < taxComps.length; j++) {
                                var rate = taxComps[j].Taxrate1;
                                var IsDependTax = taxComps[j].IsDependTax;
                                var IsCompoundedTax = taxComps[j].IsCompoundedTax;
                                var amount1 = 0;
                                if (taxComps[j].IsDependTax == false && taxComps[j].IsCompoundedTax == false) {

                                    var crate = parseFloat(rate);
                                    parentEffectiveRate = crate * parseFloat(compoundedsub) / 100;
                                    effectiveTotal += parentEffectiveRate;
                                    amount1 = parentEffectiveRate;
                                }
                                if (IsDependTax == true && IsCompoundedTax == false) {
                                    var crate = parseFloat(parentEffectiveRate) * parseFloat(rate) / 100;
                                    effectiveTotal += crate;
                                    amount1 = crate;
                                }
                                if (IsDependTax == false && IsCompoundedTax == true) {
                                    var crate = (effectiveTotal + compoundedsub) * parseFloat(rate) / 100;
                                    effectiveTotal += crate;
                                    parentEffectiveRate = crate;
                                    amount1 = parentEffectiveRate;
                                }

                                var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxComps[j].TaxCompId; });
                                productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxComps[j].Taxrate1 + '%) on Product',
                                    "Amount": amount1
                                });

                            }
                        }
                        else {
                            var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxid; });
                            var amount1 = (taxMain[0].Rate * parseFloat(compoundedsub) / 100);
                            productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxMain[0].Rate + '%) on Product',
                                "Amount": amount1
                            });
                        }

                    }
                    // amount.find('.amounthide').val(currentsub.toFixed(2));
                }

            }
            var currencyrate = parseFloat($('#Currencyrate').val());
            if (subtotal != 0) {
                productresults.push({ "Id": 1, "Name": "Sub Total", "Amount": subtotal });
            }

            var result11 = productresults.reduce(function (res, obj) {
                if (!(obj.Name in res))
                    res.__array.push(res[obj.Name] = obj);
                else {
                    res[obj.Name].Id += obj.Id;
                    res[obj.Name].Amount += obj.Amount;
                }
                return res;
            }, { __array: [] }).__array
                                .sort(function (a, b) { return a.Id - b.Id; });
            // alert(result11.length);
            $("#example11 > tbody").html("");
            var totalbill = 0;
            if (result11 != '') {
                for (var i = 0; i < result11.length; i++) {
                    totalbill += result11[i].Amount;
                    var newRow1 = "<tr> \
                                    <td>" + result11[i].Name + "</td> \
                					<td>" + result11[i].Amount.toFixed(2) + "</td> \
                                    </tr>"
                    $('#example11 tbody').append(newRow1);
                }
            }

            var tcurrcode = $('#TransactionCurrencyCode').val();
            var bcurrcode = $('#BaseCurrencyCode').val();
            if (tcurrcode != '') {
                tcurrcode = 'In ' + tcurrcode;
                bcurrcode = 'In ' + bcurrcode;
            }
            if (totalbill != 0) {
                var newrow2 = "<tr> \
                                                <td>Grand Total " + tcurrcode + "</td> \
                            					<td>" + totalbill.toFixed(2) + "</td> \
                                                </tr>";
                $('#example11 tbody').append(newrow2);
                if (tcurrcode != bcurrcode) {
                    var bcurrencytotal = totalbill * currencyrate;
                    //bcurrencytotal = Math.round(bcurrencytotal);
                    var newrow2 = "<tr> \
                                                <td>Grand Total " + bcurrcode + "</td> \
                            					<td>" + bcurrencytotal.toFixed(2) + "</td> \
                                                </tr>";
                    $('#example11 tbody').append(newrow2);
                }
            }

        }
        else {

            var productresults = [];
            var taxid = $('#TaxId').val();

            var tamount = $('#TotalAmount').val();
            var compoundedsub = parseFloat(tamount);

            if (typeof taxid === "undefined" || taxid == '') {
            }
            else {
                var taxComps = $.grep(taxComponents, function (e) { return e.TaxId == taxid; });

                if (taxComps.length != 0) {
                    var effectiveTotal = 0;
                    var parentEffectiveRate = 0;
                    for (var j = 0; j < taxComps.length; j++) {
                        var rate = taxComps[j].Taxrate1;
                        var IsDependTax = taxComps[j].IsDependTax;
                        var IsCompoundedTax = taxComps[j].IsCompoundedTax;
                        var amount1 = 0;
                        if (taxComps[j].IsDependTax == false && taxComps[j].IsCompoundedTax == false) {

                            var crate = parseFloat(rate);
                            parentEffectiveRate = crate * parseFloat(compoundedsub) / 100;
                            effectiveTotal += parentEffectiveRate;
                            amount1 = parentEffectiveRate;
                        }
                        if (IsDependTax == true && IsCompoundedTax == false) {
                            var crate = parseFloat(parentEffectiveRate) * parseFloat(rate) / 100;
                            effectiveTotal += crate;
                            amount1 = crate;
                        }
                        if (IsDependTax == false && IsCompoundedTax == true) {
                            var crate = (effectiveTotal + compoundedsub) * parseFloat(rate) / 100;
                            effectiveTotal += crate;
                            parentEffectiveRate = crate;
                            amount1 = parentEffectiveRate;
                        }

                        var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxComps[j].TaxCompId; });
                        productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxComps[j].Taxrate1 + '%) ',
                            "Amount": amount1
                        });

                    }
                }
                else {
                    var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxid; });
                    var amount1 = (taxMain[0].Rate * parseFloat(compoundedsub) / 100);
                    productresults.push({ "Id": 7, "Name": taxMain[0].Name + '(' + taxMain[0].Rate + '%) ',
                        "Amount": amount1
                    });

                }

            }

            var currencyrate = parseFloat($('#Currencyrate').val());
            if (compoundedsub != 0) {
                productresults.push({ "Id": 1, "Name": "Sub Total", "Amount": compoundedsub });
            }

            var result11 = productresults.reduce(function (res, obj) {
                if (!(obj.Name in res))
                    res.__array.push(res[obj.Name] = obj);
                else {
                    res[obj.Name].Id += obj.Id;
                    res[obj.Name].Amount += obj.Amount;
                }
                return res;
            }, { __array: [] }).__array
                                .sort(function (a, b) { return a.Id - b.Id; });

            $("#example11 > tbody").html("");

            var totalbill = 0;
            if (result11 != '') {
                for (var i = 0; i < result11.length; i++) {
                    totalbill += result11[i].Amount;

                    var newRow1 = "<tr> \
                                                        <td>" + result11[i].Name + "</td> \
                                    					<td>" + result11[i].Amount.toFixed(2) + "</td> \
                                                        </tr>"
                    $('#example11 tbody').append(newRow1);
                }
            }

            var tcurrcode = $('#TransactionCurrencyCode').val();
            var bcurrcode = $('#BaseCurrencyCode').val();
            if (tcurrcode != '') {
                tcurrcode = 'In ' + tcurrcode;
                bcurrcode = 'In ' + bcurrcode;
            }
            if (totalbill != 0) {
                var newrow2 = "<tr> \
                                                <td>Grand Total " + tcurrcode + "</td> \
                            					<td>" + totalbill.toFixed(2) + "</td> \
                                                </tr>";
                $('#example11 tbody').append(newrow2);
                if (tcurrcode != bcurrcode) {
                    var bcurrencytotal = totalbill * currencyrate;
                    //bcurrencytotal = Math.round(bcurrencytotal);
                    var newrow2 = "<tr> \
                                                <td>Grand Total " + bcurrcode + "</td> \
                            					<td>" + bcurrencytotal.toFixed(2) + "</td> \
                                                </tr>";
                    $('#example11 tbody').append(newrow2);
                }
            }
        }

    });

</script>
<script type="text/javascript">
    $(document).ready(function () {
        dropDownProduct = '<select id="drpProduct" class="form-control">';

        dropDownProduct += '<option  value="' + '' + '" selected>' + 'Select' + '</option>';
        dropDownProduct += '<option  value="' + 'addnew' + '" ><a data-toggle="modal" data-target="#myModal" href="#">ADD NEW</a> </option>';
        $.get('/Product/getProducts', function (data, status) {

            for (var count = 0; count < data.length; count++) {

                dropDownProduct += '<option value="' + data[count].Id + '">' + data[count].Code + '</option>';
            };
            //   dropDownProduct += '<option  value="' + '900' + '" >' + '<a href="' + '#myModal' + '">ADD NEW</a>' + '</option>';
            // dropDownProduct += '<option  value="' + '900' + '" >' + 'ffffff' + '</option>';
            dropDownProduct += '</select>';
        });


        dropDownTax = '<select id="drpTax" class="form-control">';
        dropDownTax += '<option  value="' + '' + '" selected>' + 'Select' + '</option>';
        $.get('/Tax/getTaxes', function (data, status) {

            for (var count = 0; count < data.length; count++) {

                dropDownTax += '<option value="' + data[count].TaxId + '">' + data[count].Name + '(' + data[count].Rate + "%)" + '</option>';
            };
            dropDownTax += '</select>';
        });

        checkproductcount = function () {
            var result = false;
            var MyRows = $('table#example1').find('tr');
            for (var i = 0; i < MyRows.length; i++) {

                var producthide = $(MyRows[i]).find('td:eq(13)');
                var product = producthide.find('.product');
                if (parseInt(product.val()) > 0) {
                    result = true;
                    return result;
                }

            }
            return result;
        };


        caltaxcomponenthide = function () {
            $("#example22 > thead").html("");
            $("#example22 > tbody").html("");
        }
        caltaxcomponent = function () {

            var counter = 0;
            var totalamount = 0;
            var subtotal = 0;


            var taxresults = [];

            var MyRows = $('table#example1').find('tr');
            for (var i = 1; i < MyRows.length; i++) {
                var product = $(MyRows[i]).find('td:eq(0)');
                var code = $(MyRows[i]).find('td:eq(1)');
                var barcode = $(MyRows[i]).find('td:eq(2)');
                var description = $(MyRows[i]).find('td:eq(3)');
                var quantity = $(MyRows[i]).find('td:eq(4)');
                var uom = $(MyRows[i]).find('td:eq(5)');
                var of = $(MyRows[i]).find('td:eq(6)');
                var baseuom = $(MyRows[i]).find('td:eq(7)');
                var unitprice = $(MyRows[i]).find('td:eq(10)');
                var tax = $(MyRows[i]).find('td:eq(11)');
                var amount = $(MyRows[i]).find('td:eq(12)');
                var producthide = $(MyRows[i]).find('td:eq(13)');
                var taxhide = $(MyRows[i]).find('td:eq(14)');
                var uomhide = $(MyRows[i]).find('td:eq(15)');
                var baseuomhide = $(MyRows[i]).find('td:eq(16)');

                var productval = product.find('#drpProduct').val();
                var productdtext = product.find('#drpProduct option:selected').text();
                var codeval = code.find('#productcode').val();
                var barcodeval = barcode.find('#barcode').val();
                var descriptionval = description.find('#description').val();
                var quantityval = quantity.find('#quantity').val();
                var unitpriceval = unitprice.find('#unitprice').val();
                var taxval = tax.find('#drpTax').val();
                var taxdtext = tax.find('#drpTax option:selected').text();
                var uomval = uom.find('#drpUom').val();
                var uomdtext = uom.find('#drpUom option:selected').text();
                var ofval = of.find('#of').val();

                if (productval != null) {
                    counter = 1;
                    product.html('');
                    product.html("<input type='text' value=''  class='producthide input-non-active' name='producthide' readonly /> ");
                    if (productval == '' || productval == 'addnew') {
                        product.find('.producthide').val('');
                    }
                    else {
                        product.find('.producthide').val(productdtext);
                    }

                    producthide.find('.product').val(productval);
                }
                if (codeval != null) {
                    code.html('');
                    code.html("<input type='text' value=''  class='productcodehide input-non-active'  name='productcodehide' readonly /> ");
                    code.find('.productcodehide').val(codeval);
                }
                if (barcodeval != null) {
                    barcode.html('');
                    barcode.html("<input type='text' value=''  class='barcodehide input-non-active'  name='barcodehide' readonly /> ");
                    barcode.find('.barcodehide').val(barcodeval);
                }
                if (descriptionval != null) {
                    description.html('');
                    description.html("<input type='text' value=''  class='descriptionhide input-non-active'  name='descriptionhide' readonly /> ");
                    description.find('.descriptionhide').val(descriptionval);
                }
                if (quantityval != null) {
                    quantity.html('');
                    quantity.html("<input type='text' value='' style='text-align:right;'  class='quantityhide input-non-active' name='quantityhide' readonly /> ");
                    quantity.find('.quantityhide').val(quantityval);
                }

                if (taxval != null) {
                    tax.html('');
                    tax.html("<input type='text' value=''  class='taxhide input-non-active' name='taxhide' readonly /> ");
                    if (taxval == '') {
                        tax.find('.taxhide').val('');
                    }
                    else {
                        tax.find('.taxhide').val(taxdtext);
                    }

                    taxhide.find('.tax').val(taxval);
                }
                if (uomval != null) {
                    uom.html('');
                    uom.html("<input type='text' value=''  class='uomhide input-non-active' name='uomhide' readonly /> ");
                    if (uomval == '') {
                        uom.find('.uomhide').val('');
                    }
                    else {
                        uom.find('.uomhide').val(uomdtext);
                    }

                    uomhide.find('.uom').val(uomval);
                }
                if (ofval != null) {
                    of.html('');
                    of.html("<input type='text' value='' style='text-align:right;'  class='ofhide input-non-active' name='ofhide' readonly /> ");
                    of.find('.ofhide').val(ofval);
                }
                if (unitpriceval != null) {
                    unitprice.html('');
                    unitprice.html("<input type='text' value=''  class='unitpricehide input-non-active' style='text-align:right;' name='unitpricehide' readonly /> ");
                    unitprice.find('.unitpricehide').val(unitpriceval);

                }


                var checkproduct = $(MyRows[i]).find('.product');

                if (checkproduct.val() != null && checkproduct.val() != '') {
                    var qty = 0;
                    var up = 0;
                    var tx = 0;
                    var ofd = 0;
                    var calquantity = quantity.find('.quantityhide').val();


                    var calunitprice = unitprice.find('.unitpricehide').val();
                    var caltax = tax.find('.taxhide').val();
                    var calamount = amount.find('.amounthide').val();
                    var calof = of.find('.ofhide').val();
                    if (calquantity != '') {
                        qty = parseFloat(calquantity);
                    }
                    else {
                        qty = 0;
                    }
                    if (calunitprice != '') {
                        up = parseFloat(calunitprice);
                    }
                    else {
                        up = 0;
                    }
                    if (caltax != '') {
                        var arr = caltax.split('-');
                        tx = parseFloat(arr[arr.length - 1]);
                    }
                    else {
                        tx = 0;
                    }

                    if (calof != '') {
                        ofd = parseFloat(calof);
                    }
                    else {
                        ofd = 0;
                    }

                    var np = qty * up;
                    var currentsub = np;
                    subtotal += currentsub;
                    //  totaldiscount += currentdis;
                    // totaltax += tx * currentsub / 100;
                    var compoundedsub = currentsub;
                    var taxtype = '';
                    var taxid = taxhide.find('.tax').val();

                    if (typeof taxid === "undefined" || taxid == '') {
                    }
                    else {
                        var taxComps = $.grep(taxComponents, function (e) { return e.TaxId == taxid; });

                        if (taxComps.length != 0) {
                            var effectiveTotal = 0;
                            var parentEffectiveRate = 0;
                            for (var j = 0; j < taxComps.length; j++) {
                                var rate = taxComps[j].Taxrate1;
                                var IsDependTax = taxComps[j].IsDependTax;
                                var IsCompoundedTax = taxComps[j].IsCompoundedTax;
                                var amount1 = 0;
                                var taxonamount = 0;
                                if (taxComps[j].IsDependTax == false && taxComps[j].IsCompoundedTax == false) {

                                    var crate = parseFloat(rate);
                                    parentEffectiveRate = crate * parseFloat(compoundedsub) / 100;
                                    effectiveTotal += parentEffectiveRate;
                                    amount1 = parentEffectiveRate;
                                    taxonamount = compoundedsub;
                                }
                                if (IsDependTax == true && IsCompoundedTax == false) {
                                    var crate = parseFloat(parentEffectiveRate) * parseFloat(rate) / 100;
                                    effectiveTotal += crate;
                                    amount1 = crate;
                                    taxtype = 'Dependent';
                                    taxonamount = parentEffectiveRate;
                                }
                                if (IsDependTax == false && IsCompoundedTax == true) {
                                    var crate = (effectiveTotal + compoundedsub) * parseFloat(rate) / 100;
                                    taxonamount = effectiveTotal + compoundedsub;
                                    effectiveTotal += crate;
                                    parentEffectiveRate = crate;
                                    amount1 = parentEffectiveRate;
                                    taxtype = 'Compounded';

                                }


                                var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxComps[j].TaxCompId; });
                                taxresults.push({ "Id": 7, "Name": productname, "TaxName": taxMain[0].Name + '(' + taxComps[j].Taxrate1 + '%) ' + taxtype, "Amount": taxonamount,
                                    "TaxAmount": amount1
                                });

                            }
                        }
                        else {
                            var taxMain = $.grep(taxSingle, function (e) { return e.TaxId == taxid; });
                            var amount1 = (taxMain[0].Rate * parseFloat(compoundedsub) / 100);
                            taxresults.push({ "Id": 7, "Name": productname, "TaxName": taxMain[0].Name + '(' + taxMain[0].Rate + '%) ' + taxtype, "Amount": compoundedsub,
                                "TaxAmount": amount1
                            });
                        }

                    }
                    // amount.find('.amounthide').val(currentsub.toFixed(2));
                }
            }






            // var result11 = taxresults;

            var totalbill = 0;
            $("#example22 > thead").html("");
            $("#example22 > tbody").html("");

            var newRow = "<tr> \
                    <th>Product Name</th> \
                    <th>Tax Name</th> \
                    <th>Taxed Amount</th> \
                    <th>Tax Amount</th> \
                    </tr>"
            $('#example22  thead').append(newRow);
            if (taxresults != '') {
                for (var i = 0; i < taxresults.length; i++) {
                    totalbill += taxresults[i].TaxAmount;
                    var newRow1 = "<tr> \
                    <td>" + taxresults[i].Name + "</td> \
                    <td>" + taxresults[i].TaxName + "</td> \
                    <td>" + taxresults[i].Amount.toFixed(2) + "</td> \
                    <td>" + taxresults[i].TaxAmount.toFixed(2) + "</td> \
                    </tr>"
                    $('#example22 tbody').append(newRow1);
                }

                var newRow2 = "<tr> \
                    <td><a onclick='caltaxcomponent();' href='javascript:void(0);'>Refresh</a></td> \
                    <td><a onclick='caltaxcomponenthide();' href='javascript:void(0);'>Hide</a></td> \
                    <td>Total Tax Amount</td> \
					<td>" + totalbill.toFixed(2) + "</td> \
                    </tr>"
                $('#example22 tbody').append(newRow2);
            }

        };
        taxComponents = [];
        if ('@ViewBag.Taxcomponents' != '') {

            var arrtC = '@Html.Raw(Json.Encode(ViewBag.Taxcomponents))';
            // alert(arrtC);
            taxComponents = JSON.parse(arrtC);
            //   alert(taxComponents);
            taxComponents = $.makeArray(taxComponents);
            //     alert(taxComponents);
            //   alert(taxComponents[0].TaxName);
        }
        taxSingle = [];
        if ('@ViewBag.TaxSingle' != '') {

            var arrtC1 = '@Html.Raw(Json.Encode(ViewBag.TaxSingle))';
            // alert(arrtC);
            taxSingle = JSON.parse(arrtC1);
            //   alert(taxComponents);
            taxSingle = $.makeArray(taxSingle);
            //     alert(taxComponents);
            //   alert(taxComponents[0].TaxName);
        }
    });  

</script>
<link rel="stylesheet" type="text/css" href="../../css/datetimepicker/datepicker.css" />
 @using (Html.BeginForm())
  {
<aside class="right-side">
 <!-- Content Header (Page header) -->
                <section class="content-header">
                    <h1>
                       Sales Return/Credit Note
                        <small>Entry/Edit Form</small>
                    </h1>
                    <ol class="breadcrumb">
                        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
                        <li><a href="#"></a></li>
                        <li class="active"> </li>
                    </ol>
                </section>
                   <div class="nav-tabs-custom">

           
                                <ul class="nav nav-tabs">
                                @if(Model.Id != 0){
                                   <li class="pull-left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sales Return/Credit Note @Model.NO (@Model.Status)    </li>
                                    

                                    }
                                      
                                   
                                    @if(Model.Status=="Saved")
                                    {
                                        <li class="pull-right"><input type="submit" id="btnPlace" class="btn btn-primary" value="Save" /></li>
                                  
                                    }
                                     else 
                                    {
                                          <li class="pull-right"><input type="submit" id="btnPlace" class="btn btn-primary" value="Save" /></li>
                                          <li class="pull-right"><input type="submit" id="btnPark" class="btn btn-primary" value="Save As Draft" /></li>
                                   
                                    }

                                </ul>
                         
                                         </div>   
                                       @if (ViewBag.Message != null)
                                       {
                                          <div class="alert alert-success alert-dismissable" >
                                        <i class="fa fa-check"></i>
                                        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                        <b>Sales Return/Credit Note</b><br />
                                     @ViewBag.Message. <a href='/SalesReturn/Create'> Enter a new Sales Return/Credit Note?</a> 
                                    </div> 
                                       }
                <div class="alert alert-danger alert-dismissable" id="errordiv" style="display:none">
<i class="fa fa-ban"></i>
<button class="close" aria-hidden="true" data-dismiss="alert" type="button">×</button>
<b>Error!</b>
 </div>
  <div id="loading">
                                    <div id="loadingcontent">
                                         <p id="loadingspinner">
                                          Loading...
                                      </p>
                                     </div>
                                    </div>
                <!-- Main content -->
                <section class="content">
                 @* <div class="form-group row"> <div class="col-xs-8"> <label class="control-label">Effective Date</label> <div class="input-group date" id="dp3" data-date="12-02-2012" data-date-format="mm-dd-yyyy"> <input class="form-control" type="text" readonly="" value="12-02-2012"> <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span> </div> </div> </div>*@
                
                      @* <div class="nav-tabs-custom">
                                <ul class="nav nav-tabs">
                                   
                                    <li class="pull-right"><input type="submit" id="btnsubmit" class="btn btn-primary" value="Save" />
                                    
                                    </li>
                                </ul>
                         
                                         </div>    *@
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                               
                                <div class="table-responsive">
                                    <table id="example2" class="table table2">
                                     @Html.HiddenFor(model => model.Id)
                                     @Html.HiddenFor(model => model.NO)
                                       @Html.HiddenFor(model => model.CustomerId)
                                       @Html.HiddenFor(model => model.Status)
                                       @Html.HiddenFor(model => model.TransactionCurrency)
                                         @Html.HiddenFor(model => model.BaseCurrencyCode)
                                        <tbody>
                                            <tr>
                                                <td> @Html.Label("Customer Code")<span style="font-weight:bold;color:Red;">*</span></td>

                                                <td>
                                                    @Html.TextBoxFor(model => model.CustomerCode, new { @class = "form-control", @placeholder = "Enter Customer Code" })
                                                    @Html.ValidationMessageFor(model => model.CustomerCode)
                                                </td>

                                                <td></td>
                                                <td> @Html.Label("Delivery Name") </td>


                                                <td> @Html.TextBoxFor(model => model.DeliveryName, new { @class = "form-control", @placeholder = "Enter Delivery Name" })</td>
                                            </tr>
                                            <tr>
                                                <td> @Html.Label("Customer Name")<span style="font-weight:bold;color:Red;">*</span></td>

                                                <td>
                                                    @Html.TextBoxFor(model => model.CustomerName, new { @class = "form-control", @placeholder = "Enter Customer Name" })
                                                    @Html.ValidationMessageFor(model => model.CustomerName)
                                                </td>
                                                <td></td>
                                                <td>@Html.Label("Street Address")</td>
                                                <td>
                                                    @Html.TextBoxFor(model => model.StreetPoBox, new { @class = "form-control", @placeholder = "Enter Street Address" })
                                                    @Html.ValidationMessageFor(model => model.StreetPoBox)
                                                </td>
                                            </tr>
                                            <tr>
                                                <td> @Html.Label("Customer Reference")</td>
                                                <td>  @Html.TextBoxFor(model => model.Reference, new { @class = "form-control", @placeholder = "Enter Customer Refence" })</td>
                                                <td></td>
                                                <td>@Html.Label("Suhurb")</td>
                                                <td> @Html.TextBoxFor(model => model.Suburb, new { @class = "form-control", @placeholder = "Enter Suhurb" })</td>
                                            </tr>
                                            <tr>
                                                <td> @Html.Label("Payment Term")</td>
                                                <td>    @Html.DropDownListFor(model => model.PaymentTermId, new SelectList(ViewBag.PaymentTerms, "Id", "PaymentTermDescription"), "----Select----", new { @class = "form-control" })</td>
                                                <td></td>
                                                <td>@Html.Label("City")</td>
                                                <td> @Html.TextBoxFor(model => model.City, new { @class = "form-control", @placeholder = "Enter City" })</td>
                                            </tr>
                                            <tr>
                                                <td> @Html.Label("Warehouse")</td>
                                                <td>
                                                    @Html.DropDownListFor(model => model.WarehouseId, new SelectList(ViewBag.ddlWarehouses, "Id", "Name"), "----Select----", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.WarehouseId)
                                                </td>

                                                <td></td>
                                                <td>@Html.Label("State/Region")</td>
                                                <td> @Html.TextBoxFor(model => model.StateRegion, new { @class = "form-control", @placeholder = "Enter State/Region" })</td>
                                            </tr>
                                            <tr>

                                                <td> @Html.Label("Order Date")</td>
                                                <td>
                                                    <div class="input-group date" id="dp3" data-date-format="@Session["DateFormatLower"]">@Html.TextBoxFor(model => model.Date, new { @class = "form-control", @readonly = "" })  <span class="input-group-addon" style=" width:auto !important"><i class="glyphicon glyphicon-calendar"></i></span> </div>
                                                    @Html.ValidationMessageFor(model => model.Date)
                                                </td>

                                                <td></td>
                                                <td>@Html.Label("Country")</td>
                                                <td> @Html.TextBoxFor(model => model.Country, new { @class = "form-control", @placeholder = "Enter Country" })</td>
                                            </tr>

                                            <tr>
                                                <td> @Html.Label("Customer Currency")</td>
                                                <td> @Html.TextBoxFor(model => model.TransactionCurrencyCode, new { @class = "form-control", @readonly = "" })</td>
                                                <td></td>
                                                <td>@Html.Label("Postal Code")</td>
                                                <td> @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control", @placeholder = "Enter Postal Code" })</td>
                                            </tr>
                                            <tr>
                                                <td>
                                                    &nbsp;
                                                    <input type="radio" name="Type" id="noteproducts" value="1" />
                                                    <strong>&nbsp;Against Product</strong>&nbsp;
                                                </td>
                                                <td>
                                                    <input type="radio" name="Type" id="noteothers" value="2" /><strong> &nbsp;Against Others </strong>
                                                </td>


                                                <td></td>
                                                <td>@Html.Label("Value In Base Currency ") (@Html.DisplayFor(model => model.BaseCurrencyCode))</td>
                                                <td> @Html.TextBoxFor(model => model.Currencyrate, new { @class = "form-control", @readonly = "" }) </td>
                                            </tr>
                                            <tr>
                                                <td> @Html.Label("Invoice Number(Optional)")</td>
                                                <td>  @Html.TextBoxFor(model => model.OrderNo, new { @class = "form-control", @placeholder = "Enter Invoice Number" })</td>
                                                <td></td>
                                                <td> @Html.Label("Sales Person")</td>
                                                <td>
                                                    @Html.DropDownListFor(model => model.SalesPerson, new SelectList(ViewBag.ddlSalesPerson, "Id", "Name"), "----Select----", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.SalesPerson)
                                                </td>
                                            </tr>
                                            <tr>
                                                <td> @Html.Label("Sales Ledger")</td>
                                                <td>
                                                    @Html.DropDownListFor(model => model.LID, new SelectList(ViewBag.Ledger, "LID", "LedgerName"), "----Select----", new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(model => model.LID)

                                                </td>
                                                <td></td>
                                                <td> </td>
                                                <td>
                                                </td>
                                            </tr>
                                        </tbody> 
                                          
                                    </table>
                                 
                                </div><!-- /.box-body -->
                            </div><!-- /.box -->
                       
                            <div class="box">
                               
                                <div class="box-body table-responsive" id="tablediv">
                                    <table id="example1" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                              
						<th>Item Code</th>
                         <th>Item Name</th>
                        <th>Bar Code</th>
						<th>Description</th>
						<th>Qty</th>
						<th>UOM</th>
                       <th>Of</th>
                        <th>Base UOM</th>
                        <th>Total Qty</th>
						<th>Unit Price</th>
                        
						  <th>Tax</th>
                       
                     
                        <th width='10%'>Amount</th>
                        <th class='display-non-div'></th>
                        <th class='display-non-div'></th>
                       @* <th style='display:none;padding:0px;'></th>*@
						<th width='2%' align='center'>&nbsp;</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                           @* <tr>
                                                <td>Trident</td>
                                                <td>Internet
                                                    Explorer 4.0</td>
                                                <td>Win 95+</td>
                                                <td> 4</td>
                                                <td>X</td>
                                            </tr>*@
                                        </tbody>
                                    </table>
                                   
                                  @*  <input type="button" value="Add Row" id="add_ExpenseRow" />*@
                                    @*<button type="button" class="btn btn-primary btn-sm" id="add_ExpenseRow">Add New Line</button>*@
                                  
                                    <img src="../../Images/add-a-new-line.jpg" id="add_ExpenseRow" style="margin-top:10px !important;" />
                                 
</div>

                    
                         <div class="box-body table-responsive" id="textdiv" style="display:none">
                                    <table id="example101" class="table table-bordered table-striped" width="60%">
                                      
                                        <tbody>
                                            <tr>
                                            <td>@Html.Label("Amount")</td>
                                           
                                                <td> @Html.TextBoxFor(model => model.TotalAmount, new { @class = "form-control", @placeholder = "Enter Amount" })</td>
                                                 <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                                 
                                                 <td>@Html.Label("Tax")</td>
                                                <td> @Html.DropDownListFor(model => model.TaxId, new SelectList(ViewBag.TaxSingle, "TaxId", "Name"), "----Select----", new { @class = "form-control" })</td>
                                                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                        </div><!-- /.box -->
                                    </div>
                 
                                      <div class="col-md-6">
                                       <div class="box">
                                       @*<textarea class="form-control" placeholder="Enter Comments" rows="7"></textarea>*@
                                       @Html.TextAreaFor(model => model.Memo, new { @rows = 7, @class = "form-control", @placeholder = "Enter Comments" })
                                        <a onclick="caltaxcomponent();" href="javascript:void(0);">Show Tax Details</a>
                                          <div class="box-body table-responsive no-padding">
                                  <table class="table table-bordered table-striped table-hover" style="text-align:center;" id="example22">
                                  <thead></thead>
                                  <tbody>
                                  
                                    </tbody>
                                    </table>
                                    </div>
                                       </div>
                                       </div>
                                       <div class="col-md-6">
                                       <div class="box">
                                       <a href='#' id='showtotal'>Show Total</a>
                                      <div class="box-body table-responsive no-padding">
                                  <table class="table table-bordered table-striped table-hover" style="text-align:center;" id="example11">
                                  
                                  <tbody>
                                  
                                    </tbody>
                                    </table>
                                    </div>
                                    </div> 
                                 </div>


                                <!-- /.box-body -->
                                      <!-- Modal -->
<div class="modal fade ignore" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true"  data-backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title" id="myModalLabel">Add New Product</h4>
      </div>
      <div class="modal-body" id="modal-body">
       <div class="alert alert-danger alert-dismissable" id="errordiv1" style="display:none">
<i class="fa fa-ban"></i>
<button class="close" aria-hidden="true" data-dismiss="alert" type="button">×</button>
<b>Error!</b><br />
 </div>
         
                                    
                                                <div class="form-group">
                                          <label class="black_txt_010">
               Group :</label>

                  
                  @Html.DropDownList("GroupId", new SelectList(ViewBag.group, "Id", "Name"), "-----Select----", new { @class = "form-control" })<br />
                
                 	
                                    </div>
                                    <div class="form-group">
                                          <label class="black_txt_010">
                  Code :<span style="color:Red;">*</span></label>
                  <div class="clr"></div>

            
                  <input type="text" id="parentname" readonly="readonly" class="form-control parentname" name="parentname" />
                    @Html.TextBox("Code", null, new { @class = "form-control Code", @placeholder = "Enter 10 Digit Code", @maxlength = "10", @onkeypress = "return AlphaNumeric(event)" })
             <center> &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;   &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 
                     </center> 
                                      
                                     <div class="clr"></div>
                                    </div>



                            



                                     <div class="form-group">
                                          <label class="black_txt_010">
                  Name :<span style="color:Red;">*</span></label>

                  
                   @Html.TextArea("Description", new { @class = "form-control", @placeholder = "Enter Description" })
            
                                                     
                                     
                                    </div>



                                                <div class="form-group">
                                          <label class="black_txt_010">
                 Unit:</label>

                  
                  @Html.DropDownList("UnitId", new SelectList(ViewBag.unit, "Id", "Code"), "-----Select----", new { @class = "form-control" })
                         	
<b>Example: piece, pound, meter.</b>          
                                     
                                    </div>
                                    
                                                 <div class="form-group">
                                          <label class="black_txt_010">
               Sales Price :</label>

                  
                   @Html.TextBox("SalesPrice", null, new { @class = "form-control", @placeholder = "Enter Sales Price", @maxlength = "20" })
                
                                                     
                                     
                                    </div>            
                


                                    
                                    
                                          <div class="form-group">
                                          <label class="black_txt_010">
            Is Salable Product :</label>

                  
                @*   @Html.CheckBox("IsStockProduct", true, new {@readonly="readonly" })*@
              
                                <input checked="checked" type="checkbox" disabled/>      
                                    </div>



                                    
                                    
                                    @* <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>*@
        <button type="button" class="btn btn-primary" id="btnProduct">Save changes</button>
 <img src="../../Images/ajax-loader(1).gif" alt="Loading..." id="loader" style="display:none;" />
      </div>
    @*  <div class="modal-footer">
        
        <button class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal1">
      </div>*@
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

                           
                  
              
                </section><!-- /.content -->
           </aside>     
     
                 }