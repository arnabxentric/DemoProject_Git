@model XenERP.Models.HariDailyEntryModelView
@{
    //Layout = null;
    var slNo = 0;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Bird Type</title>
    <link href="~/css/datetimepicker/datepicker.css" rel="stylesheet" />
    <script type="text/javascript" src="~/Scripts/JqueryValidation.js"></script>
    <script src="../../js/plugins/datetimepicker/bootstrap-datepicker.js" type="text/javascript"></script>
    <script src="../../js/jquery-ui-1.10.3.js" type="text/javascript"></script>
    <link href="~/Content/select2/select2.min.css" rel="stylesheet" />
    <script src="~/Content/select2/select2.full.min.js"></script>


    <style>
        .my-table-header {
            background: #55b4b4;
            color: #0e0505;
        }

        .HandCursor {
            cursor: pointer;
        }

        .display-non-div {
            display: none !important;
        }

        .add-component-deletebotton {
            background: url(../Images/icon-delete.png) no-repeat scroll 0 0 rgba(0, 0, 0, 0);
            border: medium none;
            height: 15px;
            width: 15px;
        }
    </style>

    <style>
        .example-modal .modal {
            position: relative;
            top: auto;
            bottom: auto;
            right: auto;
            left: auto;
            display: block;
            z-index: 1;
        }

        .modal {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: 1040;
            display: none;
            overflow: auto;
            overflow-y: scroll;
        }

        .modal-content {
            background-color: #ffffff;
            width: 330px;
            margin: 130px auto 0 auto;
            text-align: center;
        }

        .example-modal .modal {
            background: transparent !important;
        }
    </style>

    <script>
        $(document).ready(function () {

            $("#TodayMortality").on('keyup', function () {
                var todayMortality = $(this).val();
                var totalReceiveBird = $("#ReceivedBird").val() || 0;
                var totalMortality = parseFloat($("#TotalMortality").val()) || 0;
                var fixedMortalityFixed = parseFloat($("#TotalMortalityFixed").val()) || 0;
                var grandTotalMortal = parseFloat(todayMortality) + parseFloat(fixedMortalityFixed);
                $("#TotalMortality").val(grandTotalMortal);

                if (parseFloat(grandTotalMortal) > parseFloat(totalReceiveBird)) {
                    $("#myModal").modal('show');
                    $('.msg1').html('Total Mortality can not greater than Received Bird');
                    $("#TotalMortality").val(totalMortality);
                    $(this).val(0);
                    return false;
                }
            });

            $("#AvgBodyWeight").on('keyup', function () {
                var avgwt = $(this).val() || 0;
                var totalReceiveBird = parseFloat($("#ReceivedBird").val()) || 0;
                var totalMortality = parseFloat($("#TotalMortality").val()) || 0;
                var todayMorta = parseFloat($("#TodayMortality").val()) || 0;
                var presentBird = parseFloat(totalReceiveBird) - (parseFloat(todayMorta) + parseFloat(totalMortality));

                var totalWt = parseFloat(presentBird) * parseFloat(avgwt);
                $("#TotalBodyWeight").val(totalWt);
            });

            $(".lftquan").on('keyup', function () {
                var comptd = $(this).closest('td');
                var comptr = comptd.closest('tr');
                var Lstquantity = comptr.find('.lstquan').val();
                var consuQuan = comptr.find('.consQuan1').val();
                var leftQuantity = $(this).val();
                var proCat = comptr.find('.procat').val();



                if (parseFloat(leftQuantity) > parseFloat(Lstquantity)) {
                    $("#myModal").modal('show');
                    $('.msg1').html('Left quantity can not greater than Last quantity');
                    $(this).val(0);
                    comptr.find('.consQuan').val(0);
                    return false;
                }

                var consumeQuantity1 = (parseFloat(Lstquantity) - parseFloat(leftQuantity)) || 0;
                //var consumeQuantity = (parseFloat(consuQuan) + parseFloat(consumeQuantity1)) || 0;

                comptr.find('.consQuan').val(parseFloat(consumeQuantity1) || 0);

                if (proCat == 4) {
                    var totalConsumed = $("#TotalFeedConsumedFixed").val();
                    var consu = 0;
                    $(".consQuan").each(function () {
                        var comptd1 = $(this).closest('td');
                        var comptr1 = comptd1.closest('tr');
                        var proCat1 = comptr1.find('.procat').val();
                        if (proCat1 == 4) {
                            var quan = parseFloat($(this).val());
                            consu = parseFloat(consu + quan);
                          
                        }

                    });
                    var totalCons = (parseFloat(totalConsumed) + parseFloat(consu)) || 0;
                    $("#TotalFeedConsumed").val(totalCons);
                }

            });

            //$("#btnsave").on('click', function () {
            //    $("#loading").fadeIn();
            //});
        });
    </script>


</head>

<body>
    @using (Html.BeginForm("EditDailyEntry", "HariDailyEntry", FormMethod.Post))
    {

        @Html.ValidationSummary(true)

        <aside class="right-side">

            <section class="content-header" style="text-align:center">
                <h4><b>Daily Entry</b> </h4>
                <ol class="breadcrumb">
                    <li><a href="#"><i class="fa fa-dashboard"></i>Home</a></li>
                    <li><a href="#">Forms</a></li>
                    <li class="active">Farm Create</li>
                </ol>
            </section>


            @if (ViewBag.Message != null)
            {
                <div class="alert alert-success alert-dismissable">
                    <i class="fa fa-check"></i>
                    <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                    @ViewBag.Message
                </div>
            }

            @if (ViewBag.Error != null)
            {
                <div class="alert alert-danger alert-dismissable">
                    <i class="fa fa-ban"></i>
                    <button class="close" aria-hidden="true" data-dismiss="alert" type="button"></button>
                    <b>Error!</b>
                    @ViewBag.Error
                </div>
            }

            <div id="loading">
                <div id="loadingcontent">
                    <p id="loadingspinner">
                        <img src="~/Images/newLoad.gif" />
                    </p>
                </div>
            </div>
            <div class="col-md-12">

                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header">  </div>
                        <div class="box-body">
                            <div class="form-group">
                                <label class="black_txt_010"> Farmer Name  :<span style="color:Red;">*</span> </label>
                                @Html.TextBoxFor(model => model.FarmerName, new { @class = "form-control", @readonly = "readonly" })
                                @Html.HiddenFor(model => model.FarmerId)
                            </div>


                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="box box-primary">
                        <div class="box-header">  </div>
                        <div class="box-body">
                            <div class="form-group">
                                <label class="black_txt_010"> Flock Code  :<span style="color:Red;">*</span> </label>
                                @Html.TextBoxFor(model => model.FlockCode, new { @class = "form-control", @readonly = "readonly" })
                                @Html.HiddenFor(model => model.FlockId)
                            </div>
                        </div>
                    </div>
                </div>

            </div>


            <div class="col-md-12">
                <!-- Horizontal Form -->
                @Html.HiddenFor(m => m.DateOfEntry)
                @Html.HiddenFor(m => m.LinesmanId)`
                @Html.HiddenFor(m => m.FarmerId)
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.TotalMortalityFixed)
                @Html.HiddenFor(m => m.TotalFeedConsumedFixed)
                <div class="" style="text-align:center">
                    <h4 class=""><b style="color:green">ENTRY DATE : @Model.DateOfEntry</b></h4>
                </div>
                <!-- /.box-header -->
                <!-- form start -->
                <form class="form-horizontal">
                    <div class="box-body">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Received Bird :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.ReceivedBird, new { @class = "form-control", @readonly = "readonly" })


                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Last Opening Bird :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.LastOpeningBird, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Total Mortality :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.TotalMortality, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Total Feed Received :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.TotalFeedReceived, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                        </div>

                        <div class="col-md-6">

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Total Excess Bird :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.TotalExcessBird, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Starting Date :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.FlockStartingDate, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Age Of Bird (In Day)  :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.AgeOfBird, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="col-sm-6 control-label">Total Feed Consumed :</label>
                                <div class="col-sm-6">
                                    @Html.TextBoxFor(m => m.TotalFeedConsumed, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>

                        </div>

                    </div>

                </form>

            </div>



            <div class="row">

                <div class="col-md-12">
                    <div class="" style="text-align:center">
                        <h4 class=""><b style="color:red">Mortality & Excess Bird Entry</b></h4>
                    </div>
                    <div class="box-body">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Today's Mortality <span style="color:Red;">*</span> :</label>
                                @Html.TextBoxFor(m => m.TodayMortality, new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <label>Reason For Death <span style="color:Red;">*</span> :</label>
                                @Html.TextAreaFor(m => m.ReasonforDeath, new { @class = "form-control" })
                            </div>

                        </div>
                        <div class="col-md-6">

                            <div class="form-group">
                                <label>Today's Excess Bird :</label>
                                @Html.TextBoxFor(m => m.TodayExcessBird, new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <label>Avg Body Weight (In KG) :</label>
                                @Html.TextBoxFor(m => m.AvgBodyWeight, new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <label>Total body weight at the time of closing (IN KG) :</label>
                                @Html.TextBoxFor(m => m.TotalBodyWeight, new { @class = "form-control", @readonly = "readonly" })
                            </div>

                        </div>

                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12">
                    <div class="box box-primary">
                        <div class="box-header" style="text-align:center">
                            <h4 class=""><b>FEED & MEDICINE ENTRY</b></h4>
                        </div>
                        <div class="box-body table-responsive">
                            <table id="datatable-fixed-header" class="table table-striped table-bordered">
                                <thead>
                                    <tr>
                                        <th>Feed/Medicine</th>
                                        <th>Received Quantity</th>
                                        <th>Last Opening Quantity</th>
                                        <th>Left Quantity</th>
                                        <th>Consumed Quantity</th>
                                        <th>UOM</th>
                                    </tr>
                                </thead>


                                <tbody>
                                    @for (int i = 0; i < Model.FedMedList.Count(); i++)
                                    {
                                        slNo = slNo + 1;
                                        <tr>
                                            <td>
                                                @Model.FedMedList[i].ProductName
                                                @Html.HiddenFor(m => Model.FedMedList[i].ProductName)
                                                @Html.HiddenFor(m => Model.FedMedList[i].ProductId)
                                                @Html.HiddenFor(m => Model.FedMedList[i].ProductSize)
                                                @Html.HiddenFor(m => Model.FedMedList[i].ReceivedId)
                                                @Html.HiddenFor(m => Model.FedMedList[i].ProductCategory, new { @class = "procat" })
                                            </td>
                                            <td>
                                                @Model.FedMedList[i].ReceiveQuantity
                                                @Html.HiddenFor(m => Model.FedMedList[i].ReceiveQuantity, new { @class = "recquan", @readonly = "readonly" })
                                            </td>
                                            <td>
                                                @Model.FedMedList[i].LstOpQnty
                                                @Html.HiddenFor(m => Model.FedMedList[i].LstOpQnty, new { @class = "lstquan", @readonly = "readonly" })
                                            </td>

                                            <td>
                                                @Html.TextBoxFor(m => Model.FedMedList[i].LeftQuantity, new { @class = "form-control lftquan" })
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => Model.FedMedList[i].ConsumedQuantity, new { @class = "form-control consQuan", @readonly = "readonly" })
                                                @Html.HiddenFor(m => Model.FedMedList[i].ConsumedQuantity_Fixed, new { @class = "form-control consQuan1" })
                                            </td>
                                            <td>@Model.FedMedList[i].Unit</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div style="text-align:center">
                            <input name="" type="submit" id="btnsave" value="Submit" class="btn btn-danger" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade ignore" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
                <div class="example-modal ">
                    <div class="modal-warning">
                        <div class="">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    <h4 class="modal-title">ALERT !!!</h4>
                                </div>
                                <div class="modal-body">
                                    <h4 class="msg1"></h4>
                                    <input type="hidden" id="StoreId" value="" />
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-outline" data-dismiss="modal">Close</button>

                                </div>
                            </div>
                            <!-- /.modal-content -->
                        </div>
                        <!-- /.modal-dialog -->
                    </div>
                    <!-- /.modal -->
                </div>

            </div>
        </aside>
    }


</body>


</html>